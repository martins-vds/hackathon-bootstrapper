{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "13319175486655688183"
    }
  },
  "definitions": {
    "objectId": {
      "type": "string"
    }
  },
  "parameters": {
    "hackName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Prefix for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "teamObjectIds": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/objectId"
      },
      "defaultValue": [],
      "metadata": {
        "description": "Principal Ids for each hackathon team"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "workspaceComputeVmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3"
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "$fxv#1": {
      "AccessReviewOperatorServiceRole": "76cc9ee4-d5d3-4a45-a930-26add3d73475",
      "AcrDelete": "c2f4ef07-c644-48eb-af81-4b1b4947fb11",
      "AcrImageSigner": "6cef56e8-d556-48e5-a04f-b8e64114680f",
      "AcrPull": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
      "AcrPush": "8311e382-0749-4cb8-b61a-304f252e45ec",
      "AcrQuarantineReader": "cdda3590-29a3-44f6-95f2-9f980659eb04",
      "AcrQuarantineWriter": "c8d4ff99-41c3-41a8-9f60-21dfdad59608",
      "AdvisorReviewsContributor": "8aac15f0-d885-4138-8afa-bfb5872f7d13",
      "AdvisorReviewsReader": "c64499e0-74c3-47ad-921c-13865957895c",
      "AgFoodPlatformDatasetAdmin": "a8d4b70f-0fb9-4f72-b267-b87b2f990aec",
      "AgFoodPlatformSensorPartnerContributor": "6b77f0a0-0d89-41cc-acd1-579c22c17a67",
      "AgFoodPlatformServiceAdmin": "f8da80de-1ff9-4747-ad80-a19b7f6079e3",
      "AgFoodPlatformServiceContributor": "8508508a-4469-4e45-963b-2518ee0bb728",
      "AgFoodPlatformServiceReader": "7ec7ccdc-f61e-41fe-9aaf-980df0a44eba",
      "AnyBuildBuilder": "a2138dac-4907-4679-a376-736901ed8ad8",
      "APIManagementDeveloperPortalContentEditor": "c031e6a8-4391-4de0-8d69-4706a7ed3729",
      "APIManagementServiceContributor": "312a565d-c81f-4fd8-895a-4e21e48d571c",
      "APIManagementServiceOperatorRole": "e022efe7-f5ba-4159-bbe4-b44f577e9b61",
      "APIManagementServiceReaderRole": "71522526-b88f-4d52-b57f-d31fc3546d0d",
      "APIManagementServiceWorkspaceAPIDeveloper": "9565a273-41b9-4368-97d2-aeb0c976a9b3",
      "APIManagementServiceWorkspaceAPIProductManager": "d59a3e9c-6d52-4a5a-aeed-6bf3cf0e31da",
      "APIManagementWorkspaceAPIDeveloper": "56328988-075d-4c6a-8766-d93edd6725b6",
      "APIManagementWorkspaceAPIProductManager": "73c2c328-d004-4c5e-938c-35c6f5679a1f",
      "APIManagementWorkspaceContributor": "0c34c906-8d99-4cb7-8bb7-33f5b0a1a799",
      "APIManagementWorkspaceReader": "ef1c2c96-4a77-49e8-b9a4-6179fe1d2fd2",
      "AppComplianceAutomationAdministrator": "0f37683f-2463-46b6-9ce7-9b788b988ba2",
      "AppComplianceAutomationReader": "ffc6bbe0-e443-4c3b-bf54-26581bb2f78e",
      "AppConfigurationDataOwner": "5ae67dd6-50cb-40e7-96ff-dc2bfa4b606b",
      "AppConfigurationDataReader": "516239f1-63e1-4d78-a4de-a74fb236a071",
      "AppGwforContainersConfigurationManager": "fbc52c3f-28ad-4303-a892-8a056630b8f1",
      "ApplicationGroupContributor": "ca6382a4-1721-4bcf-a114-ff0c70227b6b",
      "ApplicationInsightsComponentContributor": "ae349356-3a1b-4a5e-921d-050484c6347e",
      "ApplicationInsightsSnapshotDebugger": "08954f03-6346-4c2e-81c0-ec3a5cfae23b",
      "ASEShareRefreshData": "e2472aa6-cbfa-4fa6-91aa-72a0569352db",
      "AttestationContributor": "bbf86eb8-f7b4-4cce-96e4-18cddf81d86e",
      "AttestationReader": "fd1bd22b-8476-40bc-a0bc-69b95687b9f3",
      "AutomationContributor": "f353d9bd-d4a6-484e-a77a-8050b599b867",
      "AutomationJobOperator": "4fe576fe-1146-4730-92eb-48519fa6bf9f",
      "AutomationOperator": "d3881f73-407a-4167-8283-e981cbba0404",
      "AutomationRunbookOperator": "5fb5aef8-1081-4b8e-bb16-9d5d0385bab5",
      "AutonomousDevelopmentPlatformDataContributor(Preview)": "b8b15564-4fa6-4a59-ab12-03e1d9594795",
      "AutonomousDevelopmentPlatformDataOwner(Preview)": "27f8b550-c507-4db9-86f2-f4b8e816d59d",
      "AutonomousDevelopmentPlatformDataReader(Preview)": "d63b75f7-47ea-4f27-92ac-e0d173aaf093",
      "AvereContributor": "4f8fab4f-1852-4a58-a46a-8eaf358af14a",
      "AvereOperator": "c025889f-8102-4ebf-b32c-fc0c6f0c6bd9",
      "AzureAIDeveloper": "64702f94-c441-49e6-a78b-ef80e0188fee",
      "AzureAIInferenceDeploymentOperator": "3afb7f49-54cb-416e-8c09-6dc049efa503",
      "AzureAPICenterDataReader": "c7244dfb-f447-457d-b2ba-3999044d1706",
      "AzureArcEnabledKubernetesClusterUserRole": "00493d72-78f6-4148-b6c5-d3ce8e4799dd",
      "AzureArcKubernetesAdmin": "dffb1e0c-446f-4dde-a09f-99eb5cc68b96",
      "AzureArcKubernetesClusterAdmin": "8393591c-06b9-48a2-a542-1bd6b377f6a2",
      "AzureArcKubernetesViewer": "63f0a09d-1495-4db4-a681-037d84835eb4",
      "AzureArcKubernetesWriter": "5b999177-9696-4545-85c7-50de3797e5a1",
      "AzureArcScVmmAdministratorrole": "a92dfd61-77f9-4aec-a531-19858b406c87",
      "AzureArcScVmmPrivateCloudsOnboarding": "6aac74c4-6311-40d2-bbdd-7d01e7c6e3a9",
      "AzureArcScVmmPrivateCloudUser": "c0781e91-8102-4553-8951-97c6d4243cda",
      "AzureArcScVmmVMContributor": "e582369a-e17b-42a5-b10c-874c387c530b",
      "AzureArcVMwareAdministratorrole": "ddc140ed-e463-4246-9145-7c664192013f",
      "AzureArcVMwarePrivateCloudsOnboarding": "67d33e57-3129-45e6-bb0b-7cc522f762fa",
      "AzureArcVMwarePrivateCloudUser": "ce551c02-7c42-47e0-9deb-e3b6fc3a9a83",
      "AzureArcVMwareVMContributor": "b748a06d-6150-4f8a-aaa9-ce3940cd96cb",
      "AzureCenterforSAPsolutionsadministrator": "7b0c7e81-271f-4c71-90bf-e30bdfdbc2f7",
      "AzureCenterforSAPsolutionsManagementrole": "6d949e1d-41e2-46e3-8920-c6e4f31a8310",
      "AzureCenterforSAPsolutionsreader": "05352d14-a920-4328-a0de-4cbe7430e26b",
      "AzureCenterforSAPsolutionsservicerole": "aabbc5dd-1af0-458b-a942-81af88f9c138",
      "AzureCenterforSAPsolutionsServiceroleformanagement": "0105a6b0-4bb9-43d2-982a-12806f9faddb",
      "AzureConnectedMachineOnboarding": "b64e21ea-ac4e-4cdf-9dc9-5b892992bee7",
      "AzureConnectedMachineResourceAdministrator": "cd570a14-e51a-42ad-bac8-bafd67325302",
      "AzureConnectedMachineResourceManager": "f5819b54-e033-4d82-ac66-4fec3cbf3f4c",
      "AzureConnectedSQLServerOnboarding": "e8113dce-c529-4d33-91fa-e9b972617508",
      "AzureCustomerLockboxApproverforSubscription": "4dae6930-7baf-46f5-909e-0383bc931c46",
      "AzureDigitalTwinsDataOwner": "bcd981a7-7f74-457b-83e1-cceb9e632ffe",
      "AzureDigitalTwinsDataReader": "d57506d4-4c8d-48b1-8587-93c323f6a5a3",
      "AzureEdgeOn-SiteDeploymentEngineer": "207bcc4b-86a6-4487-9141-d6c1f4c238aa",
      "AzureEventHubsDataOwner": "f526a384-b230-433a-b45c-95f59c4a2dec",
      "AzureEventHubsDataReceiver": "a638d3c7-ab3a-418d-83e6-5f17a39d4fde",
      "AzureEventHubsDataSender": "2b629674-e913-4c01-ae53-ef4638d8f975",
      "AzureExtensionforSQLServerDeployment": "7392c568-9289-4bde-aaaa-b7131215889d",
      "AzureFrontDoorDomainContributor": "0ab34830-df19-4f8c-b84e-aa85b8afa6e8",
      "AzureFrontDoorDomainReader": "0f99d363-226e-4dca-9920-b807cf8e1a5f",
      "AzureFrontDoorProfileReader": "662802e2-50f6-46b0-aed2-e834bacc6d12",
      "AzureFrontDoorSecretContributor": "3f2eb865-5811-4578-b90a-6fc6fa0df8e5",
      "AzureFrontDoorSecretReader": "0db238c4-885e-4c4f-a933-aa2cef684fca",
      "Azureimpact-insightreader": "dfb2f09d-25f8-4558-8986-497084006d7a",
      "AzureKubernetesFleetManagerContributorRole": "63bb64ad-9799-4770-b5c3-24ed299a07bf",
      "AzureKubernetesFleetManagerRBACAdmin": "434fb43a-c01c-447e-9f67-c3ad923cfaba",
      "AzureKubernetesFleetManagerRBACClusterAdmin": "18ab4d3d-a1bf-4477-8ad9-8359bc988f69",
      "AzureKubernetesFleetManagerRBACReader": "30b27cfc-9c84-438e-b0ce-70e35255df80",
      "AzureKubernetesFleetManagerRBACWriter": "5af6afb3-c06c-4fa4-8848-71a8aee05683",
      "AzureKubernetesServiceClusterAdminRole": "0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
      "AzureKubernetesServiceClusterMonitoringUser": "1afdec4b-e479-420e-99e7-f82237c7c5e6",
      "AzureKubernetesServiceClusterUserRole": "4abbcc35-e782-43d8-92c5-2d3f1bd2253f",
      "AzureKubernetesServiceContributorRole": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
      "AzureKubernetesServiceHybridClusterAdminRole": "b5092dac-c796-4349-8681-1a322a31c3f9",
      "AzureKubernetesServiceHybridClusterUserRole": "fc3f91a1-40bf-4439-8c46-45edbd83563a",
      "AzureKubernetesServiceHybridContributorRole": "e7037d40-443a-4434-a3fb-8cd202011e1d",
      "AzureKubernetesServicePolicyAdd-onDeployment": "18ed5180-3e48-46fd-8541-4ea054d57064",
      "AzureKubernetesServiceRBACAdmin": "3498e952-d568-435e-9b2c-8d77e338d7f7",
      "AzureKubernetesServiceRBACClusterAdmin": "b1ff04bb-8a4e-4dc4-8eb5-8693973ce19b",
      "AzureKubernetesServiceRBACReader": "7f6c6a51-bcf8-42ba-9220-52d62157d7db",
      "AzureKubernetesServiceRBACWriter": "a7ffa36f-339b-4b5c-8bdf-e2c188b2c0eb",
      "AzureMachineLearningWorkspaceConnectionSecretsReader": "ea01e6af-a1c1-4350-9563-ad00f8c72ec5",
      "AzureMapsContributor": "dba33070-676a-4fb0-87fa-064dc56ff7fb",
      "AzureMapsDataContributor": "8f5e0ce6-4f7b-4dcf-bddf-e6f48634a204",
      "AzureMapsDataReadandBatchRole": "d6470a16-71bd-43ab-86b3-6f3a73f4e787",
      "AzureMapsDataReader": "423170ca-a8f6-4b0f-8487-9e4eb8f49bfa",
      "AzureMapsSearchandRenderDataReader": "6be48352-4f82-47c9-ad5e-0acacefdb005",
      "AzureMLComputeOperator": "e503ece1-11d0-4e8e-8e2c-7a6c3bf38815",
      "AzureMLDataScientist": "f6c7c914-8db3-469d-8ca1-694a8f32e121",
      "AzureMLMetricsWriter(preview)": "635dd51f-9968-44d3-b7fb-6d9a6bd613ae",
      "AzureMLRegistryUser": "1823dd4f-9b8c-4ab6-ab4e-7397a3684615",
      "AzureProgrammableConnectivityGatewayUser": "609c0c20-e0a0-4a71-b99f-e7e755ac493d",
      "AzureRedHatOpenShiftAzureFilesStorageOperatorRole": "0d7aedc0-15fd-4a67-a412-efad370c947e",
      "AzureRedHatOpenShiftCloudControllerManagerRole": "a1f96423-95ce-4224-ab27-4e3dc72facd4",
      "AzureRedHatOpenShiftClusterIngressOperatorRole": "0336e1d3-7a87-462b-b6db-342b63f7802c",
      "AzureRedHatOpenShiftImageRegistryOperatorRole": "8b32b316-c2f5-4ddf-b05b-83dacd2d08b5",
      "AzureRedHatOpenShiftMachineAPIOperatorRole": "0358943c-7e01-48ba-8889-02cc51d78637",
      "AzureRedHatOpenShiftNetworkOperatorRole": "be7a6435-15ae-4171-8f30-4a343eff9e8f",
      "AzureRedHatOpenShiftServiceOperator": "4436bae4-7702-4c84-919b-c4069ff25ee2",
      "AzureRedHatOpenShiftStorageOperatorRole": "5b7237c5-45e1-49d6-bc18-a1f62f400748",
      "AzureRelayListener": "26e0b698-aa6d-4085-9386-aadae190014d",
      "AzureRelayOwner": "2787bf04-f1f5-4bfe-8383-c8a24483ee38",
      "AzureRelaySender": "26baccc8-eea7-41f1-98f4-1762cc7f685d",
      "AzureResourceBridgeDeploymentRole": "7b1f81f9-4196-4058-8aae-762e593270df",
      "AzureResourceNotificationsSystemTopicsSubscriber": "0b962ed2-6d56-471c-bd5f-3477d83a7ba4",
      "AzureServiceBusDataOwner": "090c5cfd-751d-490a-894a-3ce6f1109419",
      "AzureServiceBusDataReceiver": "4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0",
      "AzureServiceBusDataSender": "69a216fc-b8fb-44d8-bc22-1f3c2cd27a39",
      "AzureSphereContributor": "8b9dfcab-4b77-4632-a6df-94bd07820648",
      "AzureSphereOwner": "5a382001-fe36-41ff-bba4-8bf06bd54da9",
      "AzureSpherePublisher": "6d994134-994b-4a59-9974-f479f0b227fb",
      "AzureSphereReader": "c8ae6279-5a0b-4cb2-b3f0-d4d62845742c",
      "AzureSpringAppsApplicationConfigurationServiceLogReaderRole": "6593e776-2a30-40f9-8a32-4fe28b77655d",
      "AzureSpringAppsConnectRole": "80558df3-64f9-4c0f-b32d-e5094b036b0b",
      "AzureSpringAppsManagedComponentsLogReaderRole": "52fd16bd-6ed5-46af-9c40-29cbd7952a29",
      "AzureSpringAppsRemoteDebuggingRole": "a99b0159-1064-4c22-a57b-c9b3caa1c054",
      "AzureSpringAppsSpringCloudGatewayLogReaderRole": "4301dc2a-25a9-44b0-ae63-3636cf7f2bd2",
      "AzureSpringCloudConfigServerContributor": "a06f5c24-21a7-4e1a-aa2b-f19eb6684f5b",
      "AzureSpringCloudConfigServerReader": "d04c6db6-4947-4782-9e91-30a88feb7be7",
      "AzureSpringCloudDataReader": "b5537268-8956-4941-a8f0-646150406f0c",
      "AzureSpringCloudServiceRegistryContributor": "f5880b48-c26d-48be-b172-7927bfa1c8f1",
      "AzureSpringCloudServiceRegistryReader": "cff1b556-2399-4e7e-856d-a8f754be7b65",
      "AzureStackHCIAdministrator": "bda0d508-adf1-4af0-9c28-88919fc3ae06",
      "AzureStackHCIDeviceManagementRole": "865ae368-6a45-4bd1-8fbf-0d5151f56fc1",
      "AzureStackHCIVMContributor": "874d1c73-6003-4e60-a13a-cb31ea190a85",
      "AzureStackHCIVMReader": "4b3fe76c-f777-4d24-a2d7-b027b0f7b273",
      "AzureStackRegistrationOwner": "6f12a6df-dd06-4f3e-bcb1-ce8be600526a",
      "AzureUsageBillingDataSender": "f0310ce6-e953-4cf8-b892-fb1c87eaf7f6",
      "AzureVMManagedidentitiesrestoreContributor": "6ae96244-5829-4925-a7d3-5975537d91dd",
      "BackupContributor": "5e467623-bb1f-42f4-a55d-6e525e11384b",
      "BackupOperator": "00c29273-979b-4161-815c-10b084fb9324",
      "BackupReader": "a795c7a0-d4a2-40c1-ae25-d81f01202912",
      "BayerAgPoweredServicesCWUMSolution": "a9b99099-ead7-47db-8fcf-072597a61dfa",
      "BayerAgPoweredServicesGDUSolution": "c4bc862a-3b64-4a35-a021-a380c159b042",
      "BayerAgPoweredServicesImagerySolution": "ef29765d-0d37-4119-a4f8-f9f9902c9588",
      "BillingReader": "fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64",
      "BizTalkContributor": "5e3c6656-6cfa-4708-81fe-0de47ac73342",
      "BlockchainMemberNodeAccess(Preview)": "31a002a1-acaf-453e-8a5b-297c9ca1ea24",
      "BlueprintContributor": "41077137-e803-4205-871c-5a86e6a753b4",
      "BlueprintOperator": "437d2ced-4a38-4302-8479-ed2bcb43d090",
      "CarbonOptimizationReader": "fa0d39e6-28e5-40cf-8521-1eb320653a4c",
      "CDNEndpointContributor": "426e0c7f-0c7e-4658-b36f-ff54d6c29b45",
      "CDNEndpointReader": "871e35f6-b5c1-49cc-a043-bde969a0f2cd",
      "CDNProfileContributor": "ec156ff8-a8d1-4d15-830c-5b80698ca432",
      "CDNProfileReader": "8f96442b-4075-438f-813d-ad51ab4019af",
      "ChamberAdmin": "4e9b8407-af2e-495b-ae54-bb60a55b1b5a",
      "ChamberUser": "4447db05-44ed-4da3-ae60-6cbece780e32",
      "ClassicNetworkContributor": "b34d265f-36f7-4a0d-a4d4-e158ca92e90f",
      "ClassicStorageAccountContributor": "86e8f5dc-a6e9-4c67-9d15-de283e8eac25",
      "ClassicStorageAccountKeyOperatorServiceRole": "985d6b00-f706-48f5-a6fe-d0ca12fb668d",
      "ClassicVirtualMachineContributor": "d73bb868-a0df-4d4d-bd69-98a00b01fccb",
      "ClearDBMySQLDBContributor": "9106cda0-8a86-4e81-b686-29a22c54effe",
      "CodeSigningCertificateProfileSigner": "2837e146-70d7-4cfd-ad55-7efa6464f958",
      "CodeSigningIdentityVerifier": "4339b7cf-9826-4e41-b4ed-c7f4505dac08",
      "CognitiveSearchServerlessDataContributor": "7ac06ca7-21ca-47e3-a67b-cbd6e6223baf",
      "CognitiveSearchServerlessDataReader": "79b01272-bf9f-4f4c-9517-5506269cf524",
      "CognitiveServicesContributor": "25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68",
      "CognitiveServicesCustomVisionContributor": "c1ff6cc2-c111-46fe-8896-e0ef812ad9f3",
      "CognitiveServicesCustomVisionDeployment": "5c4089e1-6d96-4d2f-b296-c1bc7137275f",
      "CognitiveServicesCustomVisionLabeler": "88424f51-ebe7-446f-bc41-7fa16989e96c",
      "CognitiveServicesCustomVisionReader": "93586559-c37d-4a6b-ba08-b9f0940c2d73",
      "CognitiveServicesCustomVisionTrainer": "0a5ae4ab-0d65-4eeb-be61-29fc9b54394b",
      "CognitiveServicesDataReader(Preview)": "b59867f0-fa02-499b-be73-45a86b5b3e1c",
      "CognitiveServicesFaceRecognizer": "9894cab4-e18a-44aa-828b-cb588cd6f2d7",
      "CognitiveServicesImmersiveReaderUser": "b2de6794-95db-4659-8781-7e080d3f2b9d",
      "CognitiveServicesLanguageOwner": "f07febfe-79bc-46b1-8b37-790e26e6e498",
      "CognitiveServicesLanguageReader": "7628b7b8-a8b2-4cdc-b46f-e9b35248918e",
      "CognitiveServicesLanguageWriter": "f2310ca1-dc64-4889-bb49-c8e0fa3d47a8",
      "CognitiveServicesLUISOwner": "f72c8140-2111-481c-87ff-72b910f6e3f8",
      "CognitiveServicesLUISReader": "18e81cdc-4e98-4e29-a639-e7d10c5a6226",
      "CognitiveServicesLUISWriter": "6322a993-d5c9-4bed-b113-e49bbea25b27",
      "CognitiveServicesMetricsAdvisorAdministrator": "cb43c632-a144-4ec5-977c-e80c4affc34a",
      "CognitiveServicesMetricsAdvisorUser": "3b20f47b-3825-43cb-8114-4bd2201156a8",
      "CognitiveServicesOpenAIContributor": "a001fd3d-188f-4b5d-821b-7da978bf7442",
      "CognitiveServicesOpenAIUser": "5e0bd9bd-7b93-4f28-af87-19fc36ad61bd",
      "CognitiveServicesQnAMakerEditor": "f4cc2bf9-21be-47a1-bdf1-5c5804381025",
      "CognitiveServicesQnAMakerReader": "466ccd10-b268-4a11-b098-b4849f024126",
      "CognitiveServicesSpeechContributor": "0e75ca1e-0464-4b4d-8b93-68208a576181",
      "CognitiveServicesSpeechUser": "f2dc8367-1007-4938-bd23-fe263f013447",
      "CognitiveServicesUsagesReader": "bba48692-92b0-4667-a9ad-c31c7b334ac2",
      "CognitiveServicesUser": "a97b65f3-24c7-4388-baec-2e87135dc908",
      "CollaborativeDataContributor": "daa9e50b-21df-454c-94a6-a8050adab352",
      "CollaborativeRuntimeOperator": "7a6f0e70-c033-4fb1-828c-08514e5f4102",
      "CommunityContributorRole": "49435da6-99fe-48a5-a235-fc668b9dc04a",
      "CommunityOwnerRole": "5e28a61e-8040-49db-b175-bb5b88af6239",
      "CommunityReaderRole": "e6aadb6b-e64f-41c0-9392-d2bba3bc3ebc",
      "ComputeDiagnosticsRole": "df2711a6-406d-41cf-b366-b0250bff9ad1",
      "ComputeGallerySharingAdmin": "1ef6a3be-d0ac-425d-8c01-acb62866290b",
      "ConnectedClusterManagedIdentityCheckAccessReader": "65a14201-8f6c-4c28-bec4-12619c5a9aaa",
      "ContainerAppReader": "ad2dd5fb-cd4b-4fd4-a9b6-4fed3630980b",
      "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
      "Contributorw/NetworkReady-only": "ef2e6351-aaa6-4608-8d63-71880b149027",
      "CosmosBackupOperator": "db7b14f2-5adf-42da-9f96-f2ee17bab5cb",
      "CosmosDBAccountReaderRole": "fbdf93bf-df7d-467e-a4d2-9458aa1360c8",
      "CosmosDBOperator": "230815da-be43-4aae-9cb4-875f7bd000aa",
      "CosmosRestoreOperator": "5432c526-bc82-444a-b7ba-57c5b0b5b34f",
      "CostManagementContributor": "434105ed-43f6-45c7-a02f-909b2ba83430",
      "CostManagementReader": "72fafb9e-0641-4937-9268-a91bfd8191a3",
      "DataBoundaryTenantAdministrator": "d1a38570-4b05-4d70-b8e4-1100bcf76d12",
      "DataBoxContributor": "add466c9-e687-43fc-8d98-dfcf8d720be5",
      "DataBoxReader": "028f4ed7-e2a9-465e-a8f4-9c0ffdfdc027",
      "DataFactoryContributor": "673868aa-7521-48a0-acc6-0f60742d39f5",
      "DataLabeling-Labeler": "c6decf44-fd0a-444c-a844-d653c394e7ab",
      "DataLakeAnalyticsDeveloper": "47b7735b-770e-4598-a7da-8b91488b4c88",
      "DataOperatorforManagedDisks": "959f8984-c045-4866-89c7-12bf9737be2e",
      "DataPurger": "150f5e0c-0603-4f03-8c7f-cf70034c4e90",
      "DefenderforStorageDataScanner": "1e7ca9b1-60d1-4db8-a914-f2ca1ff27c40",
      "DefenderKubernetesAgentOperator": "8bb6f106-b146-4ee6-a3f9-b9c5a96e0ae5",
      "DeIDBatchDataOwner": "8a90fa6b-6997-4a07-8a95-30633a7c97b9",
      "DeIDBatchDataReader": "b73a14ee-91f5-41b7-bd81-920e12466be9",
      "DeIDRealtimeDataUser": "bb6577c4-ea0a-40b2-8962-ea18cb8ecd4e",
      "DeploymentEnvironmentsReader": "eb960402-bf75-4cc3-8d68-35b34f960f72",
      "DeploymentEnvironmentsUser": "18e40d4e-8d2e-438d-97e1-9528336e149c",
      "DesktopVirtualizationApplicationGroupContributor": "86240b0e-9422-4c43-887b-b61143f32ba8",
      "DesktopVirtualizationApplicationGroupReader": "aebf23d0-b568-4e86-b8f9-fe83a2c6ab55",
      "DesktopVirtualizationContributor": "082f0a83-3be5-4ba1-904c-961cca79b387",
      "DesktopVirtualizationHostPoolContributor": "e307426c-f9b6-4e81-87de-d99efb3c32bc",
      "DesktopVirtualizationHostPoolReader": "ceadfde2-b300-400a-ab7b-6143895aa822",
      "DesktopVirtualizationPowerOnContributor": "489581de-a3bd-480d-9518-53dea7416b33",
      "DesktopVirtualizationPowerOnOffContributor": "40c5ff49-9181-41f8-ae61-143b0e78555e",
      "DesktopVirtualizationReader": "49a72310-ab8d-41df-bbb0-79b649203868",
      "DesktopVirtualizationSessionHostOperator": "2ad6aaab-ead9-4eaa-8ac5-da422f562408",
      "DesktopVirtualizationUser": "1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
      "DesktopVirtualizationUserSessionOperator": "ea4bfff8-7fb4-485a-aadd-d4129a0ffaa6",
      "DesktopVirtualizationVirtualMachineContributor": "a959dbd1-f747-45e3-8ba6-dd80f235f97c",
      "DesktopVirtualizationWorkspaceContributor": "21efdde3-836f-432b-bf3d-3e8e734d4b2b",
      "DesktopVirtualizationWorkspaceReader": "0fa44ee9-7a7d-466b-9bb2-2bf446b1204d",
      "DevCenterDevBoxUser": "45d50f46-0b78-4001-a660-4198cbe8cd05",
      "DevCenterProjectAdmin": "331c37c6-af14-46d9-b9f4-e1909e1b95a0",
      "DeviceProvisioningServiceDataContributor": "dfce44e4-17b7-4bd1-a6d1-04996ec95633",
      "DeviceProvisioningServiceDataReader": "10745317-c249-44a1-a5ce-3a4353c0bbd8",
      "DeviceUpdateAdministrator": "02ca0879-e8e4-47a5-a61e-5c618b76e64a",
      "DeviceUpdateContentAdministrator": "0378884a-3af5-44ab-8323-f5b22f9f3c98",
      "DeviceUpdateContentReader": "d1ee9a80-8b14-47f0-bdc2-f4a351625a7b",
      "DeviceUpdateDeploymentsAdministrator": "e4237640-0e3d-4a46-8fda-70bc94856432",
      "DeviceUpdateDeploymentsReader": "49e2f5d2-7741-4835-8efa-19e1fe35e47f",
      "DeviceUpdateReader": "e9dba6fb-3d52-4cf0-bce3-f06ce71b9e0f",
      "DevTestLabsUser": "76283e04-6283-4c54-8f91-bcf1374a3c64",
      "DICOMDataOwner": "58a3b984-7adf-4c20-983a-32417c86fbc8",
      "DICOMDataReader": "e89c7a3c-2f64-4fa1-a847-3e4c9ba4283a",
      "DiskBackupReader": "3e5e47e6-65f7-47ef-90b5-e5dd4d455f24",
      "DiskPoolOperator": "60fc6e62-5479-42d4-8bf4-67625fcc2840",
      "DiskRestoreOperator": "b50d9833-a0cb-478e-945f-707fcc997c13",
      "DiskSnapshotContributor": "7efff54f-a5b4-42b5-a1c5-5411624893ce",
      "DNSResolverContributor": "0f2ebee7-ffd4-4fc0-b3b7-664099fdad5d",
      "DNSZoneContributor": "befefa01-2a29-4197-83a8-272ff33ce314",
      "DocumentDBAccountContributor": "5bd9cd88-fe45-4216-938b-f97437e15450",
      "DomainServicesContributor": "eeaeda52-9324-47f6-8069-5d5bade478b2",
      "DomainServicesReader": "361898ef-9ed1-48c2-849c-a832951106bb",
      "ElasticSANNetworkAdmin": "fa6cecf6-5db3-4c43-8470-c540bcb4eafa",
      "ElasticSANOwner": "80dcbedb-47ef-405d-95bd-188a1b4ac406",
      "ElasticSANReader": "af6a70f8-3c9f-4105-acf1-d719e9fca4ca",
      "ElasticSANSnapshotExporter": "1c4770c0-34f7-4110-a1ea-a5855cc7a939",
      "ElasticSANVolumeGroupOwner": "a8281131-f312-4f34-8d98-ae12be9f0d23",
      "ElasticSANVolumeImporter": "90e8b822-3e73-47b5-868a-787dc80c008f",
      "EnclaveContributorRole": "19feefae-eacc-4106-81fd-ac34c0671f14",
      "EnclaveOwnerRole": "3d5f3eff-eb94-473d-91e3-7aac74d6c0bb",
      "EnclaveReaderRole": "86fede04-b259-4277-8c3e-e26b9865abd8",
      "EventGridContributor": "1e241071-0855-49ea-94dc-649edcd759de",
      "EventGridDataContributor": "1d8c3fe3-8864-474b-8749-01e3783e8157",
      "EventGridDataReceiver": "78cbd9e7-9798-4e2e-9b5a-547d9ebb31fb",
      "EventGridDataSender": "d5a91429-5739-47e2-a06b-3470a27159e7",
      "EventGridEventSubscriptionContributor": "428e0ff0-5e57-4d9c-a221-2c70d0e0a443",
      "EventGridEventSubscriptionReader": "2414bbcf-6497-4faf-8c65-045460748405",
      "EventGridTopicSpacesPublisher": "a12b0b94-b317-4dcd-84a8-502ce99884c6",
      "EventGridTopicSpacesSubscriber": "4b0f2fd7-60b4-4eca-896f-4435034f8bf5",
      "ExperimentationAdministrator": "7f646f1b-fa08-80eb-a33b-edd6ce5c915c",
      "ExperimentationContributor": "7f646f1b-fa08-80eb-a22b-edd6ce5c915c",
      "ExperimentationMetricContributor": "6188b7c9-7d01-4f99-a59f-c88b630326c0",
      "ExperimentationReader": "49632ef5-d9ac-41f4-b8e7-bbe587fa74a1",
      "FHIRDataContributor": "5a1fc7df-4bf1-4951-a576-89034ee01acd",
      "FHIRDataConverter": "a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
      "FHIRDataExporter": "3db33094-8700-4567-8da5-1501d4e7e843",
      "FHIRDataImporter": "4465e953-8ced-4406-a58e-0f6e3f3b530b",
      "FHIRDataReader": "4c8d0bbc-75d3-4935-991f-5f3c56d81508",
      "FHIRDataWriter": "3f88fce4-5892-4214-ae73-ba5294559913",
      "FHIRSMARTUser": "4ba50f17-9666-485c-a643-ff00808643f0",
      "FirmwareAnalysisAdmin": "9c1607d1-791d-4c68-885d-c7b7aaff7c8a",
      "GrafanaAdmin": "22926164-76b3-42b3-bc55-97df8dab3e41",
      "GrafanaEditor": "a79a5197-3a5c-4973-a920-486035ffd60f",
      "GrafanaViewer": "60921a7e-fef1-4a43-9b16-a26c52ad4769",
      "GraphOwner": "b60367af-1334-4454-b71e-769d9a4f83d9",
      "GuestConfigurationResourceContributor": "088ab73d-1256-47ae-bea9-9de8e7131f31",
      "HDInsightClusterOperator": "61ed4efc-fab3-44fd-b111-e24485cc132a",
      "HDInsightDomainServicesContributor": "8d8d5a11-05d3-4bda-a417-a08778121c7c",
      "HDInsightonAKSClusterAdmin": "fd036e6b-1266-47a0-b0bb-a05d04831731",
      "HDInsightonAKSClusterPoolAdmin": "7656b436-37d4-490a-a4ab-d39f838f0042",
      "HierarchySettingsAdministrator": "350f8d15-c687-4448-8ae1-157740a3936d",
      "HybridServerOnboarding": "5d1e5ee4-7c68-4a71-ac8b-0739630a3dfb",
      "HybridServerResourceAdministrator": "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
      "ImpactReader": "68ff5d27-c7f5-4fa9-a21c-785d0df7bd9e",
      "ImpactReporter": "36e80216-a7e8-4f42-a7e1-f12c98cbaf8a",
      "IntegrationServiceEnvironmentContributor": "a41e2c5b-bd99-4a07-88f4-9bf657a760b8",
      "IntegrationServiceEnvironmentDeveloper": "c7aa55d3-1abb-444a-a5ca-5e51e485d6ec",
      "IntelligentSystemsAccountContributor": "03a6d094-3444-4b3d-88af-7477090a9e5e",
      "IoTHubDataContributor": "4fc6c259-987e-4a07-842e-c321cc9d413f",
      "IoTHubDataReader": "b447c946-2db7-41ec-983d-d8bf3b1c77e3",
      "IoTHubRegistryContributor": "4ea46cd5-c1b2-4a8e-910b-273211f9ce47",
      "IoTHubTwinContributor": "494bdba2-168f-4f31-a0a1-191d2f7c028c",
      "IPAMPoolContributor": "7b3e853f-ad5d-4fb5-a7b8-56a3581c7037",
      "KeyVaultAdministrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
      "KeyVaultCertificatesOfficer": "a4417e6f-fecd-4de8-b567-7b0420556985",
      "KeyVaultCertificateUser": "db79e9a7-68ee-4b58-9aeb-b90e7c24fcba",
      "KeyVaultContributor": "f25e0fa2-a7c8-4377-a976-54943a77a395",
      "KeyVaultCryptoOfficer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
      "KeyVaultCryptoServiceEncryptionUser": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
      "KeyVaultCryptoServiceReleaseUser": "08bbd89e-9f13-488c-ac41-acfcb10c90ab",
      "KeyVaultCryptoUser": "12338af0-0e69-4776-bea7-57ae8d297424",
      "KeyVaultDataAccessAdministrator": "8b54135c-b56d-4d72-a534-26097cfdc8d8",
      "KeyVaultReader": "21090545-7ca7-4776-b22c-e363652d74d2",
      "KeyVaultSecretsOfficer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
      "KeyVaultSecretsUser": "4633458b-17de-408a-b874-0445c86b69e6",
      "KnowledgeConsumer": "ee361c5d-f7b5-4119-b4b6-892157c8f64c",
      "KubernetesAgentlessOperator": "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
      "KubernetesCluster-AzureArcOnboarding": "34e09817-6cbe-4d01-b1a2-e0eac5743d41",
      "KubernetesExtensionContributor": "85cb6faf-e071-4c9b-8136-154b5a04f717",
      "KubernetesNamespaceUser": "ba79058c-0414-4a34-9e42-c3399d80cd5a",
      "KubernetesRuntimeStorageClassContributorRole": "0cd9749a-3aaf-4ae5-8803-bd217705bf3b",
      "LabAssistant": "ce40b423-cede-4313-a93f-9b28290b72e1",
      "LabContributor": "5daaa2af-1fe8-407c-9122-bba179798270",
      "LabCreator": "b97fb8bc-a8b2-4522-a38b-dd33c7e65ead",
      "LabOperator": "a36e6959-b6be-4b12-8e9f-ef4b474d304d",
      "LabServicesContributor": "f69b8690-cc87-41d6-b77a-a4bc3c0a966f",
      "LabServicesReader": "2a5c394f-5eb7-4d4f-9c8e-e8eae39faebc",
      "LandingZoneManagementOwner": "38863829-c2a4-4f8d-b1d2-2e325973ebc7",
      "LandingZoneManagementReader": "8fe6e843-6d9e-417b-9073-106b048f50bb",
      "LoadTestContributor": "749a398d-560b-491b-bb21-08924219302e",
      "LoadTestOwner": "45bb0b16-2f0c-4e78-afaa-a07599b003f6",
      "LoadTestReader": "3ae3fb29-0000-4ccd-bf80-542e7b26e081",
      "LocalNGFirewallAdministratorrole": "a8835c7d-b5cb-47fa-b6f0-65ea10ce07a2",
      "LocalRulestacksAdministratorrole": "bfc3b73d-c6ff-45eb-9a5f-40298295bf20",
      "LogAnalyticsContributor": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
      "LogAnalyticsReader": "73c42c96-874c-492b-b04d-ab87d138a893",
      "LogicAppContributor": "87a39d53-fc1b-424a-814c-f7e04687dc9e",
      "LogicAppOperator": "515c2055-d9d4-4321-b1b9-bd0c9a0f79fe",
      "LogicAppsStandardContributor(Preview)": "ad710c24-b039-4e85-a019-deb4a06e8570",
      "LogicAppsStandardDeveloper(Preview)": "523776ba-4eb2-4600-a3c8-f2dc93da4bdb",
      "LogicAppsStandardOperator(Preview)": "b70c96e9-66fe-4c09-b6e7-c98e69c98555",
      "LogicAppsStandardReader(Preview)": "4accf36b-2c05-432f-91c8-5c532dff4c73",
      "LucidchartCloudInsightsimport": "32ba3ff9-6cc1-4b21-aa1c-4150ed63e1b9",
      "ManagedApplicationContributorRole": "641177b8-a67a-45b9-a033-47bc880bb21e",
      "ManagedApplicationOperatorRole": "c7393b34-138c-406f-901b-d8cf2b17e6ae",
      "ManagedApplicationsReader": "b9331d33-8a36-4f8c-b097-4f54124fdb44",
      "ManagedHSMcontributor": "18500a29-7fe2-46b2-a342-b16a415e101d",
      "ManagedIdentityContributor": "e40ec5ca-96e0-45a2-b4ff-59039f2c2b59",
      "ManagedIdentityOperator": "f1a07417-d97a-45cb-824c-7a7467783830",
      "ManagedServicesRegistrationassignmentDeleteRole": "91c1777a-f3dc-4fae-b103-61d183457e46",
      "ManagementGroupContributor": "5d58bcaf-24a5-4b20-bdb6-eed9f69fbe4c",
      "ManagementGroupReader": "ac63b705-f282-497d-ac71-919bf39d939d",
      "MediaServicesAccountAdministrator": "054126f8-9a2b-4f1c-a9ad-eca461f08466",
      "MediaServicesLiveEventsAdministrator": "532bc159-b25e-42c0-969e-a1d439f60d77",
      "MediaServicesMediaOperator": "e4395492-1534-4db2-bedf-88c14621589c",
      "MediaServicesPolicyAdministrator": "c4bba371-dacd-4a26-b320-7250bca963ae",
      "MediaServicesStreamingEndpointsAdministrator": "99dba123-b5fe-44d5-874c-ced7199a5804",
      "Microsoft.Kubernetesconnectedclusterrole": "5548b2cf-c94c-4228-90ba-30851930a12f",
      "MicrosoftSentinelAutomationContributor": "f4c81013-99ee-4d62-a7ee-b3f1f648599a",
      "MicrosoftSentinelContributor": "ab8e14d6-4a74-4a29-9ba8-549422addade",
      "MicrosoftSentinelPlaybookOperator": "51d6186e-6489-4900-b93f-92e23144cca5",
      "MicrosoftSentinelReader": "8d289c81-5878-46d4-8554-54e1e3d8b5cb",
      "MicrosoftSentinelResponder": "3e150937-b8fe-4cfb-8069-0eaf05ecd056",
      "MonitoringContributor": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
      "MonitoringDataReader": "b0d8363b-8ddd-447d-831f-62ca05bff136",
      "MonitoringMetricsPublisher": "3913510d-42f4-4e42-8a64-420c390055eb",
      "MonitoringReader": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "MySQLBackupAndExportOperator": "d18ad5f3-1baf-4119-b49b-d944edb1f9d0",
      "NetworkContributor": "4d97b98b-1d4f-4787-a291-c67834d212e7",
      "NewRelicAPMAccountContributor": "5d28c62d-5b37-4476-8438-e587778df237",
      "ObjectAnchorsAccountOwner": "ca0835dd-bacc-42dd-8ed2-ed5e7230d15b",
      "ObjectAnchorsAccountReader": "4a167cdf-cb95-4554-9203-2347fe489bd9",
      "ObjectUnderstandingAccountOwner": "4dd61c23-6743-42fe-a388-d8bdd41cb745",
      "ObjectUnderstandingAccountReader": "d18777c0-1514-4662-8490-608db7d334b6",
      "OperatorNexusKeyVaultWriterServiceRole(Preview)": "44f0a1a8-6fea-4b35-980a-8ff50c487c97",
      "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
      "Ownerw/NetworkRead-only": "1712bb1e-474a-4282-a94c-cdcbabf2cba1",
      "PlayFabContributor": "0c8b84dc-067c-4039-9615-fa1a4b77c726",
      "PlayFabReader": "a9a19cc5-31f4-447c-901f-56c0bb18fcaf",
      "PolicyInsightsDataWriter(Preview)": "66bb4e9e-b016-4a94-8249-4c0511c2be84",
      "PostgreSQLFlexibleServerLongTermRetentionBackupRole": "c088a766-074b-43ba-90d4-1fb21feae531",
      "PrivateDNSZoneContributor": "b12aa53e-6015-4669-85d0-8515ebb3ae7f",
      "ProcurementContributor": "be1a1ac2-09d3-4261-9e57-a73a6e227f53",
      "ProjectBabylonDataCurator": "9ef4ef9c-a049-46b0-82ab-dd8ac094c889",
      "ProjectBabylonDataReader": "c8d896ba-346d-4f50-bc1d-7d1c84130446",
      "ProjectBabylonDataSourceAdministrator": "05b7651b-dc44-475e-b74d-df3db49fae0f",
      "Purviewrole1(Deprecated)": "8a3c2885-9b38-4fd2-9d99-91af537c1347",
      "Purviewrole2(Deprecated)": "200bba9e-f0c8-430f-892b-6f0794863803",
      "Purviewrole3(Deprecated)": "ff100721-1b9d-43d8-af52-42b69c1272db",
      "QuotaRequestOperator": "0e5f05e5-9ab9-446b-b98d-1e2157c94125",
      "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
      "ReaderandDataAccess": "c12c1c16-33a1-487b-954d-41c89c60f349",
      "RedisCacheContributor": "e0f68234-74aa-48ed-b826-c38b57376e17",
      "RemoteRenderingAdministrator": "3df8b902-2a6f-47c7-8cc5-360e9b272a7e",
      "RemoteRenderingClient": "d39065c4-c120-43c9-ab0a-63eed9795f0a",
      "ReservationPurchaser": "f7b75c60-3036-4b75-91c3-6b41c27c1689",
      "ResourcePolicyContributor": "36243c78-bf99-498c-9df9-86d9f8d28608",
      "RoleBasedAccessControlAdministrator": "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
      "SaaSHubContributor": "e9b8712a-cbcf-4ea7-b0f7-e71b803401e6",
      "ScheduledPatchingContributor": "cd08ab90-6b14-449c-ad9a-8f8e549482c6",
      "SchedulerJobCollectionsContributor": "188a0f2f-5c9e-469b-ae67-2aa5ce574b94",
      "SchemaRegistryContributor(Preview)": "5dffeca3-4936-4216-b2bc-10343a5abb25",
      "SchemaRegistryReader(Preview)": "2c56ea50-c6b3-40a6-83c0-9d98858bc7d2",
      "SearchIndexDataContributor": "8ebe5a00-799e-43f5-93ac-243d3dce84a7",
      "SearchIndexDataReader": "1407120a-92aa-4202-b7e9-c0e197c71c8f",
      "SearchParameterManager": "a02f7c31-354d-4106-865a-deedf37fa038",
      "SearchServiceContributor": "7ca78c08-252a-4471-8644-bb5ff32d4ba0",
      "SecurityAdmin": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
      "SecurityAssessmentContributor": "612c2aa1-cb24-443b-ac28-3ab7272de6f5",
      "SecurityDetonationChamberPublisher": "352470b3-6a9c-4686-b503-35deb827e500",
      "SecurityDetonationChamberReader": "28241645-39f8-410b-ad48-87863e2951d5",
      "SecurityDetonationChamberSubmissionManager": "a37b566d-3efa-4beb-a2f2-698963fa42ce",
      "SecurityDetonationChamberSubmitter": "0b555d9b-b4a7-4f43-b330-627f0e5be8f0",
      "SecurityManager(Legacy)": "e3d13bf0-dd5a-482e-ba6b-9b8433878d10",
      "SecurityReader": "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
      "ServicesHubOperator": "82200a5b-e217-47a5-b665-6d8765ee745b",
      "SignalR/WebPubSubContributor": "8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761",
      "SignalRAccessKeyReader": "04165923-9d83-45d5-8227-78b77b0a687e",
      "SignalRAppServer": "420fcaa2-552c-430f-98ca-3264be4806c7",
      "SignalRRESTAPIOwner": "fd53cd77-2268-407a-8f46-7e7863d0f521",
      "SignalRRESTAPIReader": "ddde6b66-c0df-4114-a159-3618637b3035",
      "SignalRServiceOwner": "7e4f1700-ea5a-4f59-8f37-079cfe29dce3",
      "SiteRecoveryContributor": "6670b86e-a3f7-4917-ac9b-5d6ab1be4567",
      "SiteRecoveryOperator": "494ae006-db33-4328-bf46-533a6560a3ca",
      "SiteRecoveryReader": "dbaa88c4-0c30-4179-9fb3-46319faa6149",
      "SpatialAnchorsAccountContributor": "8bbe83f1-e2a6-4df7-8cb4-4e04d4e5c827",
      "SpatialAnchorsAccountOwner": "70bbe301-9835-447d-afdd-19eb3167307c",
      "SpatialAnchorsAccountReader": "5d51204f-eb77-4b1c-b86a-2ec626c49413",
      "SpatialMapsAccountsAccountOwner": "e9c9ed2b-2a99-4071-b2ff-5b113ebf73a1",
      "SQLDBContributor": "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
      "SqlDbMigrationRole": "189207d4-bb67-4208-a635-b06afe8b2c57",
      "SQLManagedInstanceContributor": "4939a1f6-9ae0-4e48-a1e0-f2cbe897382d",
      "SqlMIMigrationRole": "1d335eef-eee1-47fe-a9e0-53214eba8872",
      "SQLSecurityManager": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
      "SQLServerContributor": "6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437",
      "SqlVMMigrationRole": "ae8036db-e102-405b-a1b9-bae082ea436d",
      "StorageAccountBackupContributor": "e5e2a7ff-d759-4cd2-bb51-3152d37e2eb1",
      "StorageAccountContributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
      "StorageAccountEncryptionScopeContributorRole": "a316ed6d-1efe-48ac-ac08-f7995a9c26fb",
      "StorageAccountKeyOperatorServiceRole": "81a9662b-bebf-436f-a333-f67b29880f12",
      "StorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
      "StorageBlobDataOwner": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
      "StorageBlobDataReader": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
      "StorageBlobDelegator": "db58b8e5-c6ad-4a2a-8342-4190687cbf4a",
      "StorageFileDataPrivilegedContributor": "69566ab7-960f-475b-8e7c-b3118f30c6bd",
      "StorageFileDataPrivilegedReader": "b8eda974-7b85-4f76-af95-65846b26df6d",
      "StorageFileDataSMBShareContributor": "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
      "StorageFileDataSMBShareElevatedContributor": "a7264617-510b-434b-a828-9731dc254ea7",
      "StorageFileDataSMBShareReader": "aba4ae5f-2193-4029-9191-0cb91df5e314",
      "StorageQueueDataContributor": "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
      "StorageQueueDataMessageProcessor": "8a0f0c08-91a1-4084-bc3d-661d67233fed",
      "StorageQueueDataMessageSender": "c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
      "StorageQueueDataReader": "19e7f393-937e-4f77-808e-94535e297925",
      "StorageTableDataContributor": "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
      "StorageTableDataReader": "76199698-9eea-4c19-bc75-cec21354c6b6",
      "StreamAnalyticsQueryTester": "1ec5b3c1-b17e-4e25-8312-2acb3c3c5abf",
      "SupportRequestContributor": "cfd33db0-3dd1-45e3-aa9d-cdbdf3b6f24e",
      "TagContributor": "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
      "TemplateSpecContributor": "1c9b6475-caf0-4164-b5a1-2142a7116f4b",
      "TemplateSpecReader": "392ae280-861d-42bd-9ea5-08ee6d83b80e",
      "TestBaseReader": "15e0f5a1-3450-4248-8e25-e2afe88a9e85",
      "TrafficManagerContributor": "a4b10055-b0c7-44c2-b00f-c7b5b3550cf7",
      "UserAccessAdministrator": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
      "VideoIndexerRestrictedViewer": "a2c4a527-7dc0-4ee3-897b-403ade70fafb",
      "VirtualMachineAdministratorLogin": "1c0163c0-47e6-4577-8991-ea5c82e286e4",
      "VirtualMachineContributor": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
      "VirtualMachineDataAccessAdministrator(preview)": "66f75aeb-eabe-4b70-9f1e-c350c4c9ad04",
      "VirtualMachineLocalUserLogin": "602da2ba-a5c2-41da-b01d-5360126ab525",
      "VirtualMachineUserLogin": "fb879df8-f326-4884-b1cf-06f3ad86be52",
      "VMScannerOperator": "d24ecba3-c1f4-40fa-a7bb-4588a071e8fd",
      "WebPlanContributor": "2cc479cb-7b4d-49a8-b449-8c00fd0f0a4b",
      "WebPubSubServiceOwner": "12cf5a90-567b-43ae-8102-96cf46c7d9b4",
      "WebPubSubServiceReader": "bfb1c7d2-fb1a-466b-b2ba-aee63b92deaf",
      "WebsiteContributor": "de139f84-1756-47ae-9be6-808fbbe84772",
      "Windows365NetworkInterfaceContributor": "1f135831-5bbe-4924-9016-264044c00788",
      "Windows365NetworkUser": "7eabc9a4-85f7-4f71-b8ab-75daaccc1033",
      "Windows365SubscriptionReader": "3d55a8f6-4133-418d-8051-facdb1735758",
      "WindowsAdminCenterAdministratorLogin": "a6333a3e-0164-44c3-b281-7a577aff287f",
      "WorkbookContributor": "e8ddcd69-c73f-4f9f-9844-4100522f16ad",
      "WorkbookReader": "b279062a-9be3-42a0-92ae-8b3cf002ec4d",
      "WorkloadBuilderMigrationAgentRole": "d17ce0a2-0697-43bc-aac5-9113337ab61c"
    },
    "abbrs": "[variables('$fxv#0')]",
    "roles": "[variables('$fxv#1')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('hackName'), parameters('location')))]"
  },
  "resources": {
    "vault": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVaultName": {
            "value": "[format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "11784263661357531398"
            }
          },
          "definitions": {
            "keyVaultAccessPolicy": {
              "type": "object",
              "properties": {
                "objectId": {
                  "type": "string"
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "secrets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "certificates": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "defaultValue": "[format('kv{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "Specifies the name of the key vault."
              }
            },
            "keyVaultSku": {
              "type": "object",
              "defaultValue": {
                "name": "standard",
                "family": "A"
              },
              "metadata": {
                "description": "Specifies the SKU to use for the key vault."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the Azure location where the resources should be created."
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ]
            },
            "accessPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/keyVaultAccessPolicy"
              },
              "defaultValue": []
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": {
            "keyVault": {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "copy": [
                  {
                    "name": "accessPolicies",
                    "count": "[length(parameters('accessPolicies'))]",
                    "input": {
                      "tenantId": "[tenant().tenantId]",
                      "objectId": "[parameters('accessPolicies')[copyIndex('accessPolicies')].objectId]",
                      "permissions": "[parameters('accessPolicies')[copyIndex('accessPolicies')].permissions]"
                    }
                  }
                ],
                "enableRbacAuthorization": true,
                "tenantId": "[tenant().tenantId]",
                "sku": "[parameters('keyVaultSku')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                }
              }
            }
          },
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            }
          }
        }
      }
    },
    "monitoring": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoring",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "logAnalyticsName": {
            "value": "[format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))]"
          },
          "applicationInsightsName": {
            "value": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]"
          },
          "applicationInsightsDashboardName": {
            "value": "[format('{0}{1}', variables('abbrs').portalDashboards, variables('resourceToken'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "11504588522789674553"
            },
            "description": "Creates an Application Insights instance and a Log Analytics workspace."
          },
          "parameters": {
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "applicationInsightsDashboardName": {
              "type": "string",
              "defaultValue": ""
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "loganalytics",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('logAnalyticsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "648812452019755107"
                    },
                    "description": "Creates a Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2023-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "retentionInDays": 30,
                        "features": {
                          "searchVersion": 1
                        },
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "applicationinsights",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "dashboardName": {
                    "value": "[parameters('applicationInsightsDashboardName')]"
                  },
                  "logAnalyticsWorkspaceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "4617640820772898600"
                    },
                    "description": "Creates an Application Insights instance based on an existing Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "dashboardName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]",
                        "publicNetworkAccessForIngestion": "Disabled",
                        "publicNetworkAccessForQuery": "Enabled"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('dashboardName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "application-insights-dashboard",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('dashboardName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.92.45157",
                              "templateHash": "14983021874715050442"
                            },
                            "description": "Creates a dashboard for an Application Insights instance."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "applicationInsightsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Portal/dashboards",
                              "apiVersion": "2020-09-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "lenses": [
                                  {
                                    "order": 0,
                                    "parts": [
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 0,
                                          "colSpan": 2,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "id",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 2,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:20:33.345Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 5,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-08T18:47:35.237Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Usage",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:22:35.782Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Reliability",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 7,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:42:40.072Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Responsiveness\r\n",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 11,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:43:37.804Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Browser",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 15,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "MetricsExplorerJsonDefinitionId",
                                              "value": "BrowserPerformanceTimelineMetrics"
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "createdTime": "2018-05-08T12:16:27.534Z",
                                                "isInitialTime": false,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "CurrentFilter",
                                              "value": {
                                                "eventTypes": [
                                                  4,
                                                  1,
                                                  3,
                                                  5,
                                                  2,
                                                  6,
                                                  13
                                                ],
                                                "typeFacets": {},
                                                "isPermissive": false
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "sessions/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Sessions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "users/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Users",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Unique sessions and users",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "segmentationUsers"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Failed requests",
                                                        "color": "#EC008C"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Failed requests",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "failures"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/duration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server response time",
                                                        "color": "#00BCF2"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server response time",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "performance"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/networkDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Page load network connect time",
                                                        "color": "#7E58FF"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/processingDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Client processing time",
                                                        "color": "#44F1C8"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/sendDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Send request time",
                                                        "color": "#EB9371"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/receiveDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Receiving response time",
                                                        "color": "#0672F1"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average page load time breakdown",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/availabilityPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average availability",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "availability"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/server",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "dependencies/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Dependency failures",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server exceptions and Dependency failures",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processorCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Processor time",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process CPU",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average processor and process CPU utilization",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/browser",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Browser exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Browser exceptions",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/count",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability test results count",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Availability test results count",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processIOBytesPerSecond",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process IO rate",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average process I/O rate",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/memoryAvailableBytes",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Available memory",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average available memory",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "connectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'loganalytics')]"
              ]
            }
          ],
          "outputs": {
            "applicationInsightsId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.id.value]"
            },
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.connectionString.value]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.instrumentationKey.value]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.name.value]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.name.value]"
            }
          }
        }
      }
    },
    "storage": {
      "copy": {
        "name": "storage",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('storage-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}{1}{2}', variables('abbrs').storageStorageAccounts, variables('resourceToken'), copyIndex())]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          },
          "deleteRetentionPolicy": {
            "value": {
              "enabled": true,
              "days": 2
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "13405216633602133073"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "accessTier": {
              "type": "string",
              "defaultValue": "Hot",
              "allowedValues": [
                "Hot",
                "Cool",
                "Premium"
              ]
            },
            "allowBlobPublicAccess": {
              "type": "bool",
              "defaultValue": false
            },
            "allowCrossTenantReplication": {
              "type": "bool",
              "defaultValue": true
            },
            "allowSharedKeyAccess": {
              "type": "bool",
              "defaultValue": true
            },
            "defaultToOAuthAuthentication": {
              "type": "bool",
              "defaultValue": false
            },
            "deleteRetentionPolicy": {
              "type": "object",
              "defaultValue": {}
            },
            "dnsEndpointType": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "AzureDnsZone",
                "Standard"
              ]
            },
            "kind": {
              "type": "string",
              "defaultValue": "StorageV2"
            },
            "minimumTlsVersion": {
              "type": "string",
              "defaultValue": "TLS1_2"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Standard_LRS"
              }
            },
            "containers": {
              "type": "array",
              "defaultValue": []
            },
            "shares": {
              "type": "array",
              "defaultValue": []
            },
            "queues": {
              "type": "array",
              "defaultValue": []
            },
            "virtualNetworkRules": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "copy": {
                "name": "container",
                "count": "[length(parameters('containers'))]"
              },
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
              "properties": {
                "publicAccess": "[coalesce(tryGet(parameters('containers')[copyIndex()], 'publicAccess'), 'None')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "share",
                "count": "[length(parameters('shares'))]"
              },
              "condition": "[not(empty(parameters('shares')))]",
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('shares')[copyIndex()].name)]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('name'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "queue",
                "count": "[length(parameters('queues'))]"
              },
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('shares')))]",
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "accessTier": "[parameters('accessTier')]",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                "dnsEndpointType": "[parameters('dnsEndpointType')]",
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": "[parameters('virtualNetworkRules')]",
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                },
                "publicNetworkAccess": "[if(empty(parameters('virtualNetworkRules')), parameters('publicNetworkAccess'), 'Enabled')]",
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "condition": "[not(empty(parameters('keyVaultName')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-cs-secret', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-cs', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('name'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').keys[0].value)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2210147639149051324"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            },
            "primaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').primaryEndpoints]"
            },
            "connectionStringSecretUri": {
              "type": "string",
              "value": "[if(empty(parameters('keyVaultName')), '', reference(resourceId('Microsoft.Resources/deployments', format('{0}-cs-secret', parameters('name'))), '2022-09-01').outputs.secretUri.value)]"
            }
          }
        }
      },
      "dependsOn": [
        "vault"
      ]
    },
    "openAi": {
      "copy": {
        "name": "openAi",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('openai-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}aoai-{1}-{2}', variables('abbrs').cognitiveServicesAccounts, variables('resourceToken'), copyIndex())]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          },
          "kind": {
            "value": "OpenAI"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "460339173334267962"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2210147639149051324"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "vault"
      ]
    },
    "eventHub": {
      "copy": {
        "name": "eventHub",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('event-hub-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "eventHubNamespaceName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').eventHubNamespaces, variables('resourceToken'), copyIndex())]"
          },
          "eventHubName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').eventHubNamespacesEventHubs, variables('resourceToken'), copyIndex())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "17013667132455769627"
            }
          },
          "parameters": {
            "eventHubNamespaceName": {
              "type": "string"
            },
            "eventHubName": {
              "type": "string"
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "skuCapacity": {
              "type": "int",
              "defaultValue": 1
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.EventHub/namespaces",
              "apiVersion": "2024-01-01",
              "name": "[parameters('eventHubNamespaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
              }
            },
            {
              "type": "Microsoft.EventHub/namespaces/eventhubs",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('eventHubNamespaceName'), parameters('eventHubName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
              ]
            }
          ],
          "outputs": {
            "namespaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
            },
            "namespaceName": {
              "type": "string",
              "value": "[parameters('eventHubNamespaceName')]"
            },
            "eventHubId": {
              "type": "string",
              "value": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNamespaceName'), parameters('eventHubName'))]"
            },
            "eventHubName": {
              "type": "string",
              "value": "[parameters('eventHubName')]"
            }
          }
        }
      }
    },
    "cosmos": {
      "copy": {
        "name": "cosmos",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cosmos-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), copyIndex())]"
          },
          "databaseName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').sqlServersDatabases, variables('resourceToken'), copyIndex())]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "principalIds": {
            "value": "[parameters('teamObjectIds')]"
          },
          "kind": {
            "value": "GlobalDocumentDB"
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "8320974184742633240"
            },
            "description": "Creates an Azure Cosmos DB account."
          },
          "parameters": {
            "accountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "secondaryLocation": {
              "type": "string",
              "defaultValue": ""
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "kind": {
              "type": "string",
              "allowedValues": [
                "GlobalDocumentDB",
                "MongoDB",
                "Parse"
              ]
            },
            "enableServerless": {
              "type": "bool",
              "defaultValue": false
            },
            "databaseName": {
              "type": "string"
            },
            "containers": {
              "type": "array",
              "defaultValue": []
            },
            "principalIds": {
              "type": "array",
              "defaultValue": []
            },
            "defaultConsistencyLevel": {
              "type": "string",
              "defaultValue": "Session",
              "allowedValues": [
                "Eventual",
                "ConsistentPrefix",
                "Session",
                "BoundedStaleness",
                "Strong"
              ],
              "metadata": {
                "description": "The default consistency level of the Cosmos DB account."
              }
            },
            "maxStalenessPrefix": {
              "type": "int",
              "defaultValue": 100000,
              "minValue": 10,
              "maxValue": 2147483647,
              "metadata": {
                "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 2147483647. Multi Region: 100000 to 2147483647."
              }
            },
            "maxIntervalInSeconds": {
              "type": "int",
              "defaultValue": 300,
              "minValue": 5,
              "maxValue": 86400,
              "metadata": {
                "description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
              }
            },
            "systemManagedFailover": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable system managed failover for regions"
              }
            },
            "autoscaleMaxThroughput": {
              "type": "int",
              "defaultValue": 1000,
              "minValue": 1000,
              "maxValue": 1000000,
              "metadata": {
                "description": "Maximum autoscale throughput for the container"
              }
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "variables": {
            "consistencyPolicy": {
              "Eventual": {
                "defaultConsistencyLevel": "Eventual"
              },
              "ConsistentPrefix": {
                "defaultConsistencyLevel": "ConsistentPrefix"
              },
              "Session": {
                "defaultConsistencyLevel": "Session"
              },
              "BoundedStaleness": {
                "defaultConsistencyLevel": "BoundedStaleness",
                "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
                "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
              },
              "Strong": {
                "defaultConsistencyLevel": "Strong"
              }
            },
            "locations": "[union(createArray(createObject('locationName', parameters('location'), 'failoverPriority', 0, 'isZoneRedundant', false())), if(not(empty(parameters('secondaryLocation'))), createArray(createObject('locationName', parameters('secondaryLocation'), 'failoverPriority', 1, 'isZoneRedundant', false())), createArray()))]",
            "procs": "[flatten(map(range(0, length(parameters('containers'))), lambda('i', if(not(equals(tryGet(parameters('containers')[lambdaVariables('i')], 'procs'), null())), map(parameters('containers')[lambdaVariables('i')].procs, lambda('proc', createObject('index', lambdaVariables('i'), 'container', parameters('containers')[lambdaVariables('i')].name, 'procName', lambdaVariables('proc').name, 'procBody', lambdaVariables('proc').body))), createArray()))))]"
          },
          "resources": [
            {
              "copy": {
                "name": "databaseContainers",
                "count": "[length(parameters('containers'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2024-05-15",
              "name": "[format('{0}/{1}/{2}', parameters('accountName'), parameters('databaseName'), parameters('containers')[copyIndex()].name)]",
              "properties": {
                "resource": {
                  "id": "[parameters('containers')[copyIndex()].id]",
                  "partitionKey": {
                    "paths": [
                      "[parameters('containers')[copyIndex()].partitionKey]"
                    ]
                  }
                },
                "options": "[if(parameters('enableServerless'), createObject(), createObject('autoscaleSettings', createObject('maxThroughput', parameters('autoscaleMaxThroughput'))))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('accountName'), parameters('databaseName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2024-05-15",
              "name": "[parameters('accountName')]",
              "kind": "[parameters('kind')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
                "locations": "[variables('locations')]",
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": "[parameters('systemManagedFailover')]",
                "enableMultipleWriteLocations": false,
                "apiProperties": "[if(equals(parameters('kind'), 'MongoDB'), createObject('serverVersion', '4.0'), createObject())]",
                "capabilities": "[if(parameters('enableServerless'), createArray(createObject('name', 'EnableServerless')), createArray())]",
                "publicNetworkAccess": "Disabled",
                "networkAclBypass": "AzureServices"
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2024-05-15",
              "name": "[format('{0}/{1}', parameters('accountName'), parameters('databaseName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('databaseName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
              ]
            },
            {
              "copy": {
                "name": "storedProcedures",
                "count": "[length(variables('procs'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures",
              "apiVersion": "2024-05-15",
              "name": "[format('{0}/{1}/{2}/{3}', parameters('accountName'), parameters('databaseName'), parameters('containers')[variables('procs')[copyIndex()].index].name, variables('procs')[copyIndex()].procName)]",
              "properties": {
                "resource": {
                  "id": "[variables('procs')[copyIndex()].procName]",
                  "body": "[variables('procs')[copyIndex()].procBody]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('accountName'), parameters('databaseName'), parameters('containers')[variables('procs')[copyIndex()].index].name)]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
              "apiVersion": "2024-05-15",
              "name": "[format('{0}/{1}', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]",
              "properties": {
                "assignableScopes": [
                  "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                ],
                "permissions": [
                  {
                    "dataActions": [
                      "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                      "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*",
                      "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*"
                    ],
                    "notDataActions": []
                  }
                ],
                "roleName": "Reader Writer",
                "type": "CustomRole"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
              ]
            },
            {
              "copy": {
                "name": "role",
                "count": "[length(parameters('principalIds'))]"
              },
              "condition": "[not(empty(parameters('principalIds')[copyIndex()]))]",
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2024-05-15",
              "name": "[format('{0}/{1}', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role')), parameters('principalIds')[copyIndex()], resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))))]",
              "properties": {
                "principalId": "[parameters('principalIds')[copyIndex()]]",
                "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]",
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('accountName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('accountName'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2024-05-15').primaryMasterKey]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2210147639149051324"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2024-05-15').documentEndpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('accountName')]"
            },
            "accountKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('accountName'))), '2022-09-01').outputs.secretUri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "vault"
      ]
    },
    "formRecognizer": {
      "copy": {
        "name": "formRecognizer",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('formrecognizer-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').cognitiveServicesFormRecognizer, variables('resourceToken'), copyIndex())]"
          },
          "kind": {
            "value": "FormRecognizer"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "460339173334267962"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2210147639149051324"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "vault"
      ]
    },
    "computerVision": {
      "copy": {
        "name": "computerVision",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('computerVision-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}vision-{1}-{2}', variables('abbrs').cognitiveServicesAccounts, variables('resourceToken'), copyIndex())]"
          },
          "kind": {
            "value": "ComputerVision"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "460339173334267962"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2210147639149051324"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "vault"
      ]
    },
    "speechServices": {
      "copy": {
        "name": "speechServices",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('speechServices-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}speech-{1}-{2}', variables('abbrs').cognitiveServicesAccounts, variables('resourceToken'), copyIndex())]"
          },
          "kind": {
            "value": "SpeechServices"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "460339173334267962"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2210147639149051324"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "vault"
      ]
    },
    "containerRegistry": {
      "copy": {
        "name": "containerRegistry",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('container-registry-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}{1}{2}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'), copyIndex())]"
          },
          "workspaceId": {
            "value": "[reference('monitoring').outputs.logAnalyticsWorkspaceId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "sku": {
            "value": {
              "name": "Premium"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "2522374149282086048"
            },
            "description": "Creates an Azure Container Registry."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Indicates whether admin user is enabled"
              }
            },
            "anonymousPullEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether anonymous pull is enabled"
              }
            },
            "dataEndpointEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether data endpoint is enabled"
              }
            },
            "encryption": {
              "type": "object",
              "defaultValue": {
                "status": "disabled"
              },
              "metadata": {
                "description": "Encryption settings"
              }
            },
            "networkRuleBypassOptions": {
              "type": "string",
              "defaultValue": "AzureServices",
              "metadata": {
                "description": "Options for bypassing network rules"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Public network access setting"
              }
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Basic"
              },
              "metadata": {
                "description": "SKU settings"
              }
            },
            "zoneRedundancy": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Zone redundancy setting"
              }
            },
            "workspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The log analytics workspace ID used for logging and monitoring"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-11-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]",
                "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                "encryption": "[parameters('encryption')]",
                "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "zoneRedundancy": "[parameters('zoneRedundancy')]",
                "networkRuleSet": {
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                }
              }
            },
            {
              "condition": "[not(empty(parameters('workspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
              "name": "registry-diagnostics",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "logs": [
                  {
                    "category": "ContainerRegistryRepositoryEvents",
                    "enabled": true
                  },
                  {
                    "category": "ContainerRegistryLoginEvents",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "timeGrain": "PT1M"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-11-01-preview').loginServer]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "monitoring"
      ]
    },
    "appService": {
      "copy": {
        "name": "appService",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('app-service-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "runFromPackage": {
            "value": true
          },
          "identityType": {
            "value": "SystemAssigned"
          },
          "appServiceName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').webSitesAppService, variables('resourceToken'), copyIndex())]"
          },
          "appServicePlanName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').webServerFarms, variables('resourceToken'), copyIndex())]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "runtimeName": {
            "value": "node"
          },
          "runtimeVersion": {
            "value": "20-lts"
          },
          "applicationInsightsName": {
            "value": "[reference('monitoring').outputs.applicationInsightsName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "13784170648058051168"
            }
          },
          "parameters": {
            "appServiceName": {
              "type": "string"
            },
            "appServicePlanName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "useExistingAppServicePlan": {
              "type": "bool",
              "defaultValue": false
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "identityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ]
            },
            "identityName": {
              "type": "string",
              "defaultValue": ""
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python",
              "allowedValues": [
                "dotnet",
                "dotnetcore",
                "dotnet-isolated",
                "node",
                "python",
                "java",
                "powershell",
                "custom"
              ]
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": "3.11"
            },
            "runtimeNameAndVersion": {
              "type": "string",
              "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageTag": {
              "type": "string",
              "defaultValue": ""
            },
            "kind": {
              "type": "string",
              "defaultValue": "app,linux",
              "allowedValues": [
                "functionapp,linux",
                "app,linux"
              ]
            },
            "allowedOrigins": {
              "type": "array",
              "defaultValue": []
            },
            "alwaysOn": {
              "type": "bool",
              "defaultValue": true
            },
            "appCommandLine": {
              "type": "string",
              "defaultValue": ""
            },
            "appSettings": {
              "type": "object",
              "defaultValue": {}
            },
            "authClientId": {
              "type": "string",
              "defaultValue": ""
            },
            "authClientSecret": {
              "type": "securestring",
              "defaultValue": ""
            },
            "authIssuerUri": {
              "type": "string",
              "defaultValue": ""
            },
            "clientAffinityEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "enableOryxBuild": {
              "type": "bool",
              "defaultValue": "[contains(parameters('kind'), 'linux')]"
            },
            "functionAppScaleLimit": {
              "type": "int",
              "defaultValue": -1
            },
            "minimumElasticInstanceCount": {
              "type": "int",
              "defaultValue": -1
            },
            "numberOfWorkers": {
              "type": "int",
              "defaultValue": -1
            },
            "elasticWebAppScaleLimit": {
              "type": "int",
              "defaultValue": "[parameters('functionAppScaleLimit')]"
            },
            "scmDoBuildDuringDeployment": {
              "type": "bool",
              "defaultValue": false
            },
            "use32BitWorkerProcess": {
              "type": "bool",
              "defaultValue": false
            },
            "runFromPackage": {
              "type": "bool",
              "defaultValue": false
            },
            "ftpsState": {
              "type": "string",
              "defaultValue": "FtpsOnly"
            },
            "healthCheckPath": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "zoneRedundant": {
              "type": "bool",
              "defaultValue": false
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "string",
              "defaultValue": "B1",
              "allowedValues": [
                "B1",
                "B2",
                "EP3",
                "P0V3",
                "P1V3",
                "P2V3",
                "P3V3",
                "Y1"
              ]
            }
          },
          "variables": {
            "containerRegistryServerUrl": "[if(empty(parameters('containerRegistryName')), 'https://mcr.microsoft.com', format('https://{0}.azurecr.io', parameters('containerRegistryName')))]",
            "containerImageNameAndTag": "[if(or(empty(parameters('containerImageName')), empty(parameters('containerImageTag'))), 'azuredocs/containerapps-helloworld:latest', format('{0}:{1}', parameters('containerImageName'), parameters('containerImageTag')))]",
            "linuxFxVersion": "[if(empty(parameters('containerRegistryName')), parameters('runtimeNameAndVersion'), format('DOCKER|{0}/{1}', variables('containerRegistryServerUrl'), variables('containerImageNameAndTag')))]",
            "appLogCategories": [
              "AppServiceAppLogs",
              "AppServiceConsoleLogs",
              "AppServiceHTTPLogs",
              "AppServicePlatformLogs",
              "AppServiceAuthenticationLogs"
            ],
            "functionAppLogCategories": [
              "FunctionAppLogs",
              "AppServiceAuthenticationLogs"
            ],
            "logCategories": "[if(contains(parameters('kind'), 'functionapp'), variables('functionAppLogCategories'), variables('appLogCategories'))]",
            "diagSettings": "[map(variables('logCategories'), lambda('log', createObject('enabled', true(), 'category', lambdaVariables('log'))))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'appsettings')]",
              "properties": "[union(parameters('appSettings'), createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, 'APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString, 'ApplicationInsightsAgent_EXTENSION_VERSION', if(contains(parameters('kind'), 'linux'), '~3', '~2')), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri), createObject()), if(not(empty(parameters('authClientSecret'))), createObject('AUTH_CLIENT_SECRET', parameters('authClientSecret')), createObject()), if(and(equals(parameters('kind'), 'functionapp,linux'), not(empty(parameters('storageAccountName')))), createObject('FUNCTIONS_EXTENSION_VERSION', '~4', 'AzureWebJobsStorage', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value), 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value)), createObject()), if(and(equals(parameters('kind'), 'functionapp,linux'), empty(parameters('containerRegistryName'))), createObject('FUNCTIONS_WORKER_RUNTIME', parameters('runtimeName')), createObject()), if(not(empty(parameters('containerRegistryName'))), createObject('WEBSITES_ENABLE_APP_SERVICE_STORAGE', 'false', 'DOCKER_REGISTRY_SERVER_URL', variables('containerRegistryServerUrl'), 'DOCKER_REGISTRY_SERVER_USERNAME', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').username, ''), 'DOCKER_REGISTRY_SERVER_PASSWORD', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').passwords[0].value, '')), createObject()), createObject('WEBSITE_RUN_FROM_PACKAGE', if(parameters('runFromPackage'), 1, 0)), if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject('USER_ASSIGNED_MANAGED_IDENTITY_CLIENT_ID', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').clientId), createObject()))]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('kind'), 'app,linux')]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Verbose"
                  }
                },
                "detailedErrorMessages": {
                  "enabled": true
                },
                "failedRequestsTracing": {
                  "enabled": true
                },
                "httpLogs": {
                  "fileSystem": {
                    "enabled": true,
                    "retentionInDays": 1,
                    "retentionInMb": 35
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
                "[resourceId('Microsoft.Web/sites/config', parameters('appServiceName'), 'appsettings')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('authClientId')))]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'authsettingsV2')]",
              "properties": {
                "globalValidation": {
                  "requireAuthentication": true,
                  "unauthenticatedClientAction": "RedirectToLoginPage",
                  "redirectToProvider": "azureactivedirectory"
                },
                "identityProviders": {
                  "azureActiveDirectory": {
                    "enabled": true,
                    "registration": {
                      "clientId": "[parameters('authClientId')]",
                      "clientSecretSettingName": "AUTH_CLIENT_SECRET",
                      "openIdIssuer": "[parameters('authIssuerUri')]"
                    },
                    "validation": {
                      "defaultAuthorizationPolicy": {
                        "allowedApplications": []
                      }
                    }
                  }
                },
                "login": {
                  "tokenStore": {
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "condition": "[not(parameters('useExistingAppServicePlan'))]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-12-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), 1)]"
              },
              "kind": "linux",
              "properties": {
                "reserved": true,
                "zoneRedundant": "[parameters('zoneRedundant')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-12-01",
              "name": "[parameters('appServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "[parameters('identityType')]",
                "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
              },
              "properties": {
                "serverFarmId": "[if(parameters('useExistingAppServicePlan'), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')))]",
                "reserved": "[equals(parameters('kind'), 'functionapp,linux')]",
                "vnetRouteAllEnabled": true,
                "vnetContentShareEnabled": true,
                "vnetImagePullEnabled": true,
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "keyVaultReferenceIdentity": "[if(equals(parameters('identityType'), 'UserAssigned'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), null())]",
                "siteConfig": {
                  "linuxFxVersion": "[variables('linuxFxVersion')]",
                  "alwaysOn": "[parameters('alwaysOn')]",
                  "http20Enabled": true,
                  "ftpsState": "[parameters('ftpsState')]",
                  "appCommandLine": "[parameters('appCommandLine')]",
                  "ipSecurityRestrictionsDefaultAction": "Deny",
                  "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                  "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                  "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                  "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                  "healthCheckPath": "[parameters('healthCheckPath')]",
                  "cors": {
                    "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                  },
                  "elasticWebAppScaleLimit": "[if(not(equals(parameters('elasticWebAppScaleLimit'), -1)), parameters('elasticWebAppScaleLimit'), null())]"
                },
                "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                "httpsOnly": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('applicationInsightsName')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('appServiceName'))]",
              "name": "default",
              "properties": {
                "workspaceId": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').WorkspaceResourceId]",
                "logs": "[variables('diagSettings')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "condition": "[and(not(empty(parameters('containerRegistryName'))), not(equals(parameters('identityType'), 'None')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-registry-access', deployment().name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "principalId": "[if(equals(parameters('identityType'), 'UserAssigned'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "8890105082213102236"
                    },
                    "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                  },
                  "parameters": {
                    "containerRegistryName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                      "properties": {
                        "roleDefinitionId": "[variables('acrPullRole')]",
                        "principalType": "ServicePrincipal",
                        "principalId": "[parameters('principalId')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "identityPrincipalId": {
              "type": "string",
              "value": "[if(equals(parameters('identityType'), 'SystemAssigned'), reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId, if(equals(parameters('identityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId, ''))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('appServiceName')]"
            },
            "uri": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01').defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "monitoring"
      ]
    },
    "azureFunction": {
      "copy": {
        "name": "azureFunction",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('function-app-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "runFromPackage": {
            "value": true
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          },
          "identityType": {
            "value": "SystemAssigned"
          },
          "appServicePlanName": {
            "value": "[format('{0}function-{1}-{2}', variables('abbrs').webServerFarms, variables('resourceToken'), copyIndex())]"
          },
          "functionAppName": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').webSitesFunctions, variables('resourceToken'), copyIndex())]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "storageAccountName": {
            "value": "[format('{0}function{1}{2}', variables('abbrs').storageStorageAccounts, variables('resourceToken'), copyIndex())]"
          },
          "applicationInsightsName": {
            "value": "[reference('monitoring').outputs.applicationInsightsName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "18206486475282450746"
            }
          },
          "parameters": {
            "functionAppName": {
              "type": "string"
            },
            "useExistingAppServicePlan": {
              "type": "bool",
              "defaultValue": false
            },
            "appServicePlanName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "appSettings": {
              "type": "object",
              "defaultValue": {}
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageTag": {
              "type": "string",
              "defaultValue": ""
            },
            "identityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ]
            },
            "identityName": {
              "type": "string",
              "defaultValue": ""
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "zoneRedundant": {
              "type": "bool",
              "defaultValue": false
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python",
              "allowedValues": [
                "dotnet",
                "dotnetcore",
                "dotnet-isolated",
                "node",
                "python",
                "java",
                "powershell",
                "custom"
              ]
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": "3.11"
            },
            "sku": {
              "type": "string",
              "defaultValue": "EP3",
              "allowedValues": [
                "Y1",
                "EP3"
              ]
            },
            "runFromPackage": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "functionContentShareName": "function-content-share"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('func-storage-{0}', parameters('functionAppName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "shares": {
                    "value": [
                      {
                        "name": "[variables('functionContentShareName')]"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "13405216633602133073"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "accessTier": {
                      "type": "string",
                      "defaultValue": "Hot",
                      "allowedValues": [
                        "Hot",
                        "Cool",
                        "Premium"
                      ]
                    },
                    "allowBlobPublicAccess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "allowCrossTenantReplication": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowSharedKeyAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "defaultToOAuthAuthentication": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deleteRetentionPolicy": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "dnsEndpointType": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "AzureDnsZone",
                        "Standard"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2"
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "defaultValue": "TLS1_2"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Standard_LRS"
                      }
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "shares": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "queues": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "container",
                        "count": "[length(parameters('containers'))]"
                      },
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
                      "properties": {
                        "publicAccess": "[coalesce(tryGet(parameters('containers')[copyIndex()], 'publicAccess'), 'None')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "share",
                        "count": "[length(parameters('shares'))]"
                      },
                      "condition": "[not(empty(parameters('shares')))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('shares')[copyIndex()].name)]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "queue",
                        "count": "[length(parameters('queues'))]"
                      },
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {
                        "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('shares')))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2023-05-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "accessTier": "[parameters('accessTier')]",
                        "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                        "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                        "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                        "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                        "dnsEndpointType": "[parameters('dnsEndpointType')]",
                        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "virtualNetworkRules": "[parameters('virtualNetworkRules')]",
                          "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                        },
                        "publicNetworkAccess": "[if(empty(parameters('virtualNetworkRules')), parameters('publicNetworkAccess'), 'Enabled')]",
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('keyVaultName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-cs-secret', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "keyVaultSecretName": {
                            "value": "[format('{0}-cs', parameters('name'))]"
                          },
                          "keyVaultSecretValue": {
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('name'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').keys[0].value)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.92.45157",
                              "templateHash": "2210147639149051324"
                            }
                          },
                          "parameters": {
                            "keyVaultName": {
                              "type": "string"
                            },
                            "keyVaultSecretName": {
                              "type": "string"
                            },
                            "keyVaultSecretValue": {
                              "type": "securestring"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                              "properties": {
                                "value": "[parameters('keyVaultSecretValue')]"
                              }
                            }
                          ],
                          "outputs": {
                            "secretName": {
                              "type": "string",
                              "value": "[parameters('keyVaultSecretName')]"
                            },
                            "secretUri": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                    },
                    "primaryEndpoints": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').primaryEndpoints]"
                    },
                    "connectionStringSecretUri": {
                      "type": "string",
                      "value": "[if(empty(parameters('keyVaultName')), '', reference(resourceId('Microsoft.Resources/deployments', format('{0}-cs-secret', parameters('name'))), '2022-09-01').outputs.secretUri.value)]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('functionAppName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "runFromPackage": {
                    "value": "[parameters('runFromPackage')]"
                  },
                  "appServiceName": {
                    "value": "[parameters('functionAppName')]"
                  },
                  "useExistingAppServicePlan": {
                    "value": "[parameters('useExistingAppServicePlan')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "identityName": {
                    "value": "[parameters('identityName')]"
                  },
                  "identityType": {
                    "value": "[parameters('identityType')]"
                  },
                  "appServicePlanName": {
                    "value": "[parameters('appServicePlanName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "sku": {
                    "value": "[parameters('sku')]"
                  },
                  "kind": {
                    "value": "functionapp,linux"
                  },
                  "containerImageName": {
                    "value": "[parameters('containerImageName')]"
                  },
                  "containerImageTag": {
                    "value": "[parameters('containerImageTag')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('WEBSITE_CONTENTSHARE', variables('functionContentShareName')))]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('func-storage-{0}', parameters('functionAppName'))), '2022-09-01').outputs.name.value]"
                  },
                  "zoneRedundant": {
                    "value": "[parameters('zoneRedundant')]"
                  },
                  "numberOfWorkers": "[if(parameters('zoneRedundant'), createObject('value', 3), createObject('value', -1))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "13784170648058051168"
                    }
                  },
                  "parameters": {
                    "appServiceName": {
                      "type": "string"
                    },
                    "appServicePlanName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "useExistingAppServicePlan": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "identityType": {
                      "type": "string",
                      "defaultValue": "None",
                      "allowedValues": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ]
                    },
                    "identityName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "runtimeName": {
                      "type": "string",
                      "defaultValue": "python",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "defaultValue": "3.11"
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "containerImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "containerImageTag": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux",
                      "allowedValues": [
                        "functionapp,linux",
                        "app,linux"
                      ]
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "authClientId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "authClientSecret": {
                      "type": "securestring",
                      "defaultValue": ""
                    },
                    "authIssuerUri": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[contains(parameters('kind'), 'linux')]"
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "elasticWebAppScaleLimit": {
                      "type": "int",
                      "defaultValue": "[parameters('functionAppScaleLimit')]"
                    },
                    "scmDoBuildDuringDeployment": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "runFromPackage": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "ftpsState": {
                      "type": "string",
                      "defaultValue": "FtpsOnly"
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "storageAccountName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "zoneRedundant": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "B1",
                      "allowedValues": [
                        "B1",
                        "B2",
                        "EP3",
                        "P0V3",
                        "P1V3",
                        "P2V3",
                        "P3V3",
                        "Y1"
                      ]
                    }
                  },
                  "variables": {
                    "containerRegistryServerUrl": "[if(empty(parameters('containerRegistryName')), 'https://mcr.microsoft.com', format('https://{0}.azurecr.io', parameters('containerRegistryName')))]",
                    "containerImageNameAndTag": "[if(or(empty(parameters('containerImageName')), empty(parameters('containerImageTag'))), 'azuredocs/containerapps-helloworld:latest', format('{0}:{1}', parameters('containerImageName'), parameters('containerImageTag')))]",
                    "linuxFxVersion": "[if(empty(parameters('containerRegistryName')), parameters('runtimeNameAndVersion'), format('DOCKER|{0}/{1}', variables('containerRegistryServerUrl'), variables('containerImageNameAndTag')))]",
                    "appLogCategories": [
                      "AppServiceAppLogs",
                      "AppServiceConsoleLogs",
                      "AppServiceHTTPLogs",
                      "AppServicePlatformLogs",
                      "AppServiceAuthenticationLogs"
                    ],
                    "functionAppLogCategories": [
                      "FunctionAppLogs",
                      "AppServiceAuthenticationLogs"
                    ],
                    "logCategories": "[if(contains(parameters('kind'), 'functionapp'), variables('functionAppLogCategories'), variables('appLogCategories'))]",
                    "diagSettings": "[map(variables('logCategories'), lambda('log', createObject('enabled', true(), 'category', lambdaVariables('log'))))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2023-12-01",
                      "name": "[format('{0}/{1}', parameters('appServiceName'), 'appsettings')]",
                      "properties": "[union(parameters('appSettings'), createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, 'APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString, 'ApplicationInsightsAgent_EXTENSION_VERSION', if(contains(parameters('kind'), 'linux'), '~3', '~2')), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri), createObject()), if(not(empty(parameters('authClientSecret'))), createObject('AUTH_CLIENT_SECRET', parameters('authClientSecret')), createObject()), if(and(equals(parameters('kind'), 'functionapp,linux'), not(empty(parameters('storageAccountName')))), createObject('FUNCTIONS_EXTENSION_VERSION', '~4', 'AzureWebJobsStorage', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value), 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value)), createObject()), if(and(equals(parameters('kind'), 'functionapp,linux'), empty(parameters('containerRegistryName'))), createObject('FUNCTIONS_WORKER_RUNTIME', parameters('runtimeName')), createObject()), if(not(empty(parameters('containerRegistryName'))), createObject('WEBSITES_ENABLE_APP_SERVICE_STORAGE', 'false', 'DOCKER_REGISTRY_SERVER_URL', variables('containerRegistryServerUrl'), 'DOCKER_REGISTRY_SERVER_USERNAME', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').username, ''), 'DOCKER_REGISTRY_SERVER_PASSWORD', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').passwords[0].value, '')), createObject()), createObject('WEBSITE_RUN_FROM_PACKAGE', if(parameters('runFromPackage'), 1, 0)), if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject('USER_ASSIGNED_MANAGED_IDENTITY_CLIENT_ID', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').clientId), createObject()))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('kind'), 'app,linux')]",
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2023-12-01",
                      "name": "[format('{0}/{1}', parameters('appServiceName'), 'logs')]",
                      "properties": {
                        "applicationLogs": {
                          "fileSystem": {
                            "level": "Verbose"
                          }
                        },
                        "detailedErrorMessages": {
                          "enabled": true
                        },
                        "failedRequestsTracing": {
                          "enabled": true
                        },
                        "httpLogs": {
                          "fileSystem": {
                            "enabled": true,
                            "retentionInDays": 1,
                            "retentionInMb": 35
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
                        "[resourceId('Microsoft.Web/sites/config', parameters('appServiceName'), 'appsettings')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('authClientId')))]",
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2023-12-01",
                      "name": "[format('{0}/{1}', parameters('appServiceName'), 'authsettingsV2')]",
                      "properties": {
                        "globalValidation": {
                          "requireAuthentication": true,
                          "unauthenticatedClientAction": "RedirectToLoginPage",
                          "redirectToProvider": "azureactivedirectory"
                        },
                        "identityProviders": {
                          "azureActiveDirectory": {
                            "enabled": true,
                            "registration": {
                              "clientId": "[parameters('authClientId')]",
                              "clientSecretSettingName": "AUTH_CLIENT_SECRET",
                              "openIdIssuer": "[parameters('authIssuerUri')]"
                            },
                            "validation": {
                              "defaultAuthorizationPolicy": {
                                "allowedApplications": []
                              }
                            }
                          }
                        },
                        "login": {
                          "tokenStore": {
                            "enabled": true
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('useExistingAppServicePlan'))]",
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2023-12-01",
                      "name": "[parameters('appServicePlanName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('sku')]",
                        "capacity": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), 1)]"
                      },
                      "kind": "linux",
                      "properties": {
                        "reserved": true,
                        "zoneRedundant": "[parameters('zoneRedundant')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2023-12-01",
                      "name": "[parameters('appServiceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "identity": {
                        "type": "[parameters('identityType')]",
                        "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
                      },
                      "properties": {
                        "serverFarmId": "[if(parameters('useExistingAppServicePlan'), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')))]",
                        "reserved": "[equals(parameters('kind'), 'functionapp,linux')]",
                        "vnetRouteAllEnabled": true,
                        "vnetContentShareEnabled": true,
                        "vnetImagePullEnabled": true,
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "keyVaultReferenceIdentity": "[if(equals(parameters('identityType'), 'UserAssigned'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), null())]",
                        "siteConfig": {
                          "linuxFxVersion": "[variables('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "http20Enabled": true,
                          "ftpsState": "[parameters('ftpsState')]",
                          "appCommandLine": "[parameters('appCommandLine')]",
                          "ipSecurityRestrictionsDefaultAction": "Deny",
                          "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                          "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                          "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                          "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                          "healthCheckPath": "[parameters('healthCheckPath')]",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                          },
                          "elasticWebAppScaleLimit": "[if(not(equals(parameters('elasticWebAppScaleLimit'), -1)), parameters('elasticWebAppScaleLimit'), null())]"
                        },
                        "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                        "httpsOnly": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('applicationInsightsName')))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.Web/sites/{0}', parameters('appServiceName'))]",
                      "name": "default",
                      "properties": {
                        "workspaceId": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').WorkspaceResourceId]",
                        "logs": "[variables('diagSettings')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "condition": "[and(not(empty(parameters('containerRegistryName'))), not(equals(parameters('identityType'), 'None')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-registry-access', deployment().name)]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerRegistryName": {
                            "value": "[parameters('containerRegistryName')]"
                          },
                          "principalId": "[if(equals(parameters('identityType'), 'UserAssigned'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.92.45157",
                              "templateHash": "8890105082213102236"
                            },
                            "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                          },
                          "parameters": {
                            "containerRegistryName": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                              "properties": {
                                "roleDefinitionId": "[variables('acrPullRole')]",
                                "principalType": "ServicePrincipal",
                                "principalId": "[parameters('principalId')]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(equals(parameters('identityType'), 'SystemAssigned'), reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId, if(equals(parameters('identityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId, ''))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('appServiceName')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01').defaultHostName)]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('func-storage-{0}', parameters('functionAppName')))]"
              ]
            }
          ],
          "outputs": {
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('functionAppName')), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('functionAppName')), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "monitoring",
        "vault"
      ]
    },
    "searchService": {
      "copy": {
        "name": "searchService",
        "count": "[length(parameters('teamObjectIds'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('search-service-team-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}{1}-{2}', variables('abbrs').searchSearchServices, variables('resourceToken'), copyIndex())]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "authOptions": {
            "value": {
              "aadOrApiKey": {
                "aadAuthFailureMode": "http401WithBearerChallenge"
              }
            }
          },
          "keyVaultName": {
            "value": "[reference('vault').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "1492215719815189942"
            }
          },
          "definitions": {
            "IpRule": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "ipRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpRule"
              },
              "defaultValue": []
            },
            "replicas": {
              "type": "int",
              "defaultValue": 1
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "standard"
              }
            },
            "authOptions": {
              "type": "object",
              "defaultValue": {}
            },
            "semanticSearch": {
              "type": "string",
              "defaultValue": "free",
              "allowedValues": [
                "free",
                "standard",
                "disabled"
              ]
            },
            "keyVaultName": {
              "type": "string"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            }
          },
          "resources": {
            "search": {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2024-06-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "authOptions": "[parameters('authOptions')]",
                "disableLocalAuth": false,
                "disabledDataExfiltrationOptions": [],
                "encryptionWithCmk": {
                  "enforcement": "Unspecified"
                },
                "hostingMode": "default",
                "networkRuleSet": {
                  "bypass": "AzureServices",
                  "ipRules": "[parameters('ipRules')]"
                },
                "partitionCount": 1,
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "replicaCount": "[parameters('replicas')]",
                "semanticSearch": "[parameters('semanticSearch')]"
              },
              "sku": "[parameters('sku')]"
            },
            "adminKeySecret": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('name')), '2024-06-01-preview').primaryKey]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "2210147639149051324"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "search"
              ]
            }
          },
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
            },
            "endpoint": {
              "type": "string",
              "value": "[format('https://{0}.search.windows.net/', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[parameters('sku').name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference('adminKeySecret').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference('search', '2024-06-01-preview', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "vault"
      ]
    },
    "mlWorkspace": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "machine-learning-workspace",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationInsightsId": {
            "value": "[reference('monitoring').outputs.applicationInsightsId.value]"
          },
          "keyVaultId": {
            "value": "[reference('vault').outputs.id.value]"
          },
          "workspaceName": {
            "value": "[format('{0}{1}', variables('abbrs').machineLearningServicesWorkspaces, variables('resourceToken'))]"
          },
          "workspaceStorageName": {
            "value": "[format('{0}mlw{1}', variables('abbrs').storageStorageAccounts, variables('resourceToken'))]"
          },
          "workspaceComputeVmSize": {
            "value": "[parameters('workspaceComputeVmSize')]"
          },
          "teamObjectIds": {
            "value": "[parameters('teamObjectIds')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "15750243770271673295"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string"
            },
            "workspaceStorageName": {
              "type": "string"
            },
            "workspaceComputeVmSize": {
              "type": "string",
              "defaultValue": "Standard_A2_v2",
              "allowedValues": [
                "Standard_A2_v2",
                "Standard_D2s_v3"
              ]
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "keyVaultId": {
              "type": "string"
            },
            "applicationInsightsId": {
              "type": "string"
            },
            "teamObjectIds": {
              "type": "array",
              "defaultValue": []
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "copy": {
                "name": "compute",
                "count": "[length(parameters('teamObjectIds'))]"
              },
              "type": "Microsoft.MachineLearningServices/workspaces/computes",
              "apiVersion": "2024-04-01",
              "name": "[format('{0}/{1}', parameters('workspaceName'), format('computeteam{0}', copyIndex()))]",
              "location": "[parameters('location')]",
              "properties": {
                "computeType": "ComputeInstance",
                "computeLocation": "[parameters('location')]",
                "description": "[format('Compute instance for team {0}', copyIndex())]",
                "properties": {
                  "vmSize": "[parameters('workspaceComputeVmSize')]",
                  "personalComputeInstanceSettings": {
                    "assignedUser": {
                      "objectId": "[parameters('teamObjectIds')[copyIndex()]]",
                      "tenantId": "[subscription().tenantId]"
                    }
                  },
                  "enableNodePublicIp": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": "[parameters('tags')]",
              "properties": {
                "friendlyName": "[parameters('workspaceName')]",
                "keyVault": "[parameters('keyVaultId')]",
                "applicationInsights": "[parameters('applicationInsightsId')]",
                "storageAccount": "[reference(resourceId('Microsoft.Resources/deployments', 'workspace-storage'), '2022-09-01').outputs.id.value]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'workspace-storage')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "workspace-storage",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('workspaceStorageName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "13405216633602133073"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "accessTier": {
                      "type": "string",
                      "defaultValue": "Hot",
                      "allowedValues": [
                        "Hot",
                        "Cool",
                        "Premium"
                      ]
                    },
                    "allowBlobPublicAccess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "allowCrossTenantReplication": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowSharedKeyAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "defaultToOAuthAuthentication": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deleteRetentionPolicy": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "dnsEndpointType": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "AzureDnsZone",
                        "Standard"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2"
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "defaultValue": "TLS1_2"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Standard_LRS"
                      }
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "shares": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "queues": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "container",
                        "count": "[length(parameters('containers'))]"
                      },
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
                      "properties": {
                        "publicAccess": "[coalesce(tryGet(parameters('containers')[copyIndex()], 'publicAccess'), 'None')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "share",
                        "count": "[length(parameters('shares'))]"
                      },
                      "condition": "[not(empty(parameters('shares')))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('shares')[copyIndex()].name)]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "queue",
                        "count": "[length(parameters('queues'))]"
                      },
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {
                        "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('shares')))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2023-05-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "accessTier": "[parameters('accessTier')]",
                        "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                        "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                        "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                        "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                        "dnsEndpointType": "[parameters('dnsEndpointType')]",
                        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "virtualNetworkRules": "[parameters('virtualNetworkRules')]",
                          "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                        },
                        "publicNetworkAccess": "[if(empty(parameters('virtualNetworkRules')), parameters('publicNetworkAccess'), 'Enabled')]",
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('keyVaultName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-cs-secret', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "keyVaultSecretName": {
                            "value": "[format('{0}-cs', parameters('name'))]"
                          },
                          "keyVaultSecretValue": {
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('name'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').keys[0].value)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.31.92.45157",
                              "templateHash": "2210147639149051324"
                            }
                          },
                          "parameters": {
                            "keyVaultName": {
                              "type": "string"
                            },
                            "keyVaultSecretName": {
                              "type": "string"
                            },
                            "keyVaultSecretValue": {
                              "type": "securestring"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                              "properties": {
                                "value": "[parameters('keyVaultSecretValue')]"
                              }
                            }
                          ],
                          "outputs": {
                            "secretName": {
                              "type": "string",
                              "value": "[parameters('keyVaultSecretName')]"
                            },
                            "secretUri": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                    },
                    "primaryEndpoints": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').primaryEndpoints]"
                    },
                    "connectionStringSecretUri": {
                      "type": "string",
                      "value": "[if(empty(parameters('keyVaultName')), '', reference(resourceId('Microsoft.Resources/deployments', format('{0}-cs-secret', parameters('name'))), '2022-09-01').outputs.secretUri.value)]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "monitoring",
        "vault"
      ]
    },
    "rbca": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "role-assignment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalIds": {
            "value": "[parameters('teamObjectIds')]"
          },
          "roles": {
            "value": [
              "[variables('roles').AcrDelete]",
              "[variables('roles').AcrPull]",
              "[variables('roles').AcrPush]",
              "[variables('roles').ApplicationInsightsComponentContributor]",
              "[variables('roles').AzureEventHubsDataOwner]",
              "[variables('roles').AzureMLDataScientist]",
              "[variables('roles').CognitiveServicesContributor]",
              "[variables('roles').CognitiveServicesCustomVisionContributor]",
              "[variables('roles').CognitiveServicesCustomVisionDeployment]",
              "[variables('roles').CognitiveServicesOpenAIContributor]",
              "[variables('roles').CosmosDBOperator]",
              "[variables('roles').DocumentDBAccountContributor]",
              "[variables('roles').KeyVaultAdministrator]",
              "[variables('roles').KeyVaultCertificateUser]",
              "[variables('roles').KeyVaultCryptoUser]",
              "[variables('roles').KeyVaultSecretsUser]",
              "[variables('roles').MonitoringContributor]",
              "[variables('roles').SearchIndexDataContributor]",
              "[variables('roles').SearchServiceContributor]",
              "[variables('roles').StorageAccountContributor]",
              "[variables('roles').StorageBlobDataOwner]",
              "[variables('roles').StorageFileDataPrivilegedContributor]",
              "[variables('roles').StorageQueueDataContributor]",
              "[variables('roles').StorageTableDataContributor]",
              "[variables('roles').WebPlanContributor]",
              "[variables('roles').WebsiteContributor]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "3840626313804437881"
            }
          },
          "parameters": {
            "principalIds": {
              "type": "array",
              "defaultValue": []
            },
            "roles": {
              "type": "array",
              "defaultValue": []
            }
          },
          "variables": {
            "copy": [
              {
                "name": "principalRolesMapping",
                "count": "[length(parameters('principalIds'))]",
                "input": "[map(parameters('roles'), lambda('role', createObject('principalId', parameters('principalIds')[copyIndex('principalRolesMapping')], 'role', lambdaVariables('role'))))]"
              }
            ],
            "flattenedPrincipalRoles": "[flatten(variables('principalRolesMapping'))]"
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(variables('flattenedPrincipalRoles'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('role-assignment-{0}', uniqueString(variables('flattenedPrincipalRoles')[copyIndex()].principalId, variables('flattenedPrincipalRoles')[copyIndex()].role))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[variables('flattenedPrincipalRoles')[copyIndex()].principalId]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('flattenedPrincipalRoles')[copyIndex()].role]"
                  },
                  "principalType": {
                    "value": "Group"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.31.92.45157",
                      "templateHash": "14795817252879959442"
                    }
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
}